{"version":3,"sources":["components/Dashboard/Dashboard.module.css","components/SignUp/Login/Login.module.css","components/DailyLog/NewDailyLog/NewDailyLog.module.css","components/SignUp/Register/Register.module.css","components/Profile/ProfileForm.module.css","components/DailyLog/NewDailyLog/DailyLogForm.module.css","components/UI/Input/Input.module.css","components/LandingPage/LandingPage.module.css","components/Charts/DailyLogChart.module.css","components/UI/Button/Button.module.css","components/Error/Error.module.css","components/UI/Card/Card.module.css","components/UI/Progress/Progress.module.css","components/UI/Input/Input.js","components/UI/Button/Button.js","contexts/user-context.js","contexts/api-context.js","components/UI/Card/Card.js","components/Profile/ProfileForm.js","components/UI/Progress/Progress.js","components/Home/Home.js","components/Dashboard/Dashboard.js","components/SignUp/Login/Login.js","components/SignUp/Register/Register.js","components/SideDrawer/DrawerToggleButton.js","components/MainHeader/Toolbar.js","components/SideDrawer/SideDrawer.js","components/Backdrop/Backdrop.js","components/MainHeader/MainHeader.js","routes/PrivateRoute.js","routes/PublicRoute.js","components/LandingPage/LandingPage.js","components/DailyLog/NewDailyLog/NewDailyLog.js","components/DailyLog/DailyLog.js","components/DailyLog/NewDailyLog/DailyLogForm.js","components/Charts/DailyLogChart.js","components/Error/Error.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Input","props","className","classes","control","isValid","invalid","htmlFor","id","label","inputDiv","displayMinMax","minMax","min","type","value","onChange","onBlur","max","Button","loading","disabled","children","isLoading","button","onClick","name","AuthContext","React","createContext","user","isLoggedIn","onLogout","onLogin","email","password","onRegister","AuthContextProvider","useState","setIsLoggedIn","setIsLoading","setUser","useEffect","localStorage","getItem","JSON","parse","loginHandler","a","requestOptions","mode","method","headers","body","stringify","fetch","process","response","json","data","ok","Error","message","setItem","registerationHandler","Provider","removeItem","API_SERVER_BASE_URL","ApiContext","profile","dailyLog","images","saveProfile","params","updateProfile","updateDailyLog","uploadImage","resetState","ApiContextProvider","setProfile","setDailyLog","setImages","authCtx","useContext","fetchProfileHandler","useCallback","token","userId","profileData","quittingReason","smokingTimesPerDay","hoursStonedPerDay","smokingCostPerWeek","soberDate","fetchDailyLog","quittingReasonPhoto","cravings","irritability","anxiety","insomnia","appetiteLoss","moodSwings","depression","coldSweats","motivation","happiness","confidence","imageName","imageData","prevValue","fetchProfile","fetchLog","Promise","all","then","values","catch","error","Card","card","ProfileForm","apiCtx","setQuittingReason","setSmokingTimesPerDay","setHoursStonedPerDay","setSmokingCostPerWeek","setSoberDate","isError","setIsError","setMessage","submitHandler","event","preventDefault","dateFormatter","date","setMinutes","getMinutes","getTimezoneOffset","toISOString","slice","Date","msgClass","styles","successMsg","failureMsg","profileFormHeadingDiv","profileFormHeading","messageDiv","profileForm","onSubmit","target","actions","btn","Progress","loader","Home","to","Dashboard","elapsedSoberDate","setElapsedSoberDate","moneySavedTillNow","setMoneySavedTillNow","moneySavedPerYear","setMoneySavedPerYear","hoursNotStoned","setHoursNotStoned","timeElapsedSoberDate","setInterval","timeDiff","now","seconds","Math","floor","secondsAsString","minutes","minutesAsString","hours","totalHoursAsString","moneySaved","toFixed","Object","keys","length","elapsedSoberTimeContainer","smokeFreeHeading","elapsedSoberTime","moneySavedContainer","hoursMoneySavedDiv","hoursMoneySaved","moneySavedLabel","quittingReasonContainer","quittingReasonLabel","quittingReasonQuote","emailReducer","state","action","val","includes","passReducer","AUTO_LOGIN_KEY","AUTO_LOGIN_EMAIL","console","log","withRouter","formIsValid","setFormIsValid","useReducer","emailEntered","emailDispatch","passEntered","passDispatch","emailIsValid","passIsValid","shakeonError","setShakeonError","formValidityTimout","setTimeout","clearTimeout","handleLoginError","shake","nativeEvent","submitter","pass","history","push","loginHeadingDiv","loginHeading","login","or","autoLoginBtn","redirectToRegisterDiv","switchToReg","nameEntered","setNameEntered","handleRegistrationError","regHeadingDiv","regHeading","register","redirectToLoginDiv","switchToLogin","drawerToggleButton","click","Navigation","ctx","updatedProfile","hasOwnProperty","drawerClickHandler","SideDrawer","drawerClasses","show","Backdrop","MainHeader","backdrop","sideDrawerOpen","setDrawerOpen","prevState","PrivateRoute","Component","component","rest","render","PublicRoute","restricted","LandingPage","landingPage_container","image_div","welcome_info_div","welcome_heading","welcome_message","newDailyLogHandler","DailyLogHistory","dailyLogRow","map","index","CalendarDailyLog","calendarDiv","style","flex","calendar","dailyLogDate","logHistoryDate","createdTime","logHistoryStats","newDailyLogFormHeadingDiv","newDailyLogFormHeading","newDailyLogContainer","dailyLogImage","dailyLogButtonDiv","dailyLogButton","addNewLogDiv","addNewLogButton","DailyLog","setCravings","setIrritability","setAnxiety","setInsomnia","setAppetiteLoss","setMoodSwings","setDepression","setColdSweats","setMotivation","setHappiness","setConfidence","dailyLogFormHeadingDiv","dailyLogFormHeading","dailyLogFormSubHeading","dailyLogForm","formlegendDiv","formlegend","e","DailyLogChart","reduce","acc","getTime","dailyLogData","dispatchDailyLogData","dailyLogAdditionalData","dispatchDailyLogAdditionalData","options","chart","title","text","subtitle","xAxis","labels","formatter","Highcharts","dateFormat","this","yAxis","tooltip","tooltipFormatter","plotOptions","series","marker","enabled","colors","responsive","rules","condition","maxWidth","chartOptions","radius","caption","options1","x","substring","y","changeHighChartsPosition","el","document","getElementsByClassName","position","charts","forEach","reflow","customizeHighChart","NoDataToDisplay","setOptions","lang","noData","fontWeight","fontSize","color","dailyLogChart_headingDiv","dailyLogChart_heading","dailyLogChart_subHeading","dailyLogChart_container","containerProps","margin","highcharts","errorContainer","centerAlign","errorMsg","App","Fragment","path","Login","Register","exact","DailyLogForm","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.371bba15.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"elapsedSoberTimeContainer\":\"Dashboard_elapsedSoberTimeContainer__2B-Fo\",\"elapsedSoberTime\":\"Dashboard_elapsedSoberTime__2Gmu1\",\"smokeFreeHeading\":\"Dashboard_smokeFreeHeading__2d5M5\",\"moneySavedContainer\":\"Dashboard_moneySavedContainer__2GIAb\",\"moneySaved\":\"Dashboard_moneySaved__N3y6u\",\"moneySavedLabel\":\"Dashboard_moneySavedLabel__3AaAl\",\"quittingReasonContainer\":\"Dashboard_quittingReasonContainer__dZJLS\",\"quittingReasonLabel\":\"Dashboard_quittingReasonLabel__39dd0\",\"quittingReason\":\"Dashboard_quittingReason__3TF_I\",\"quittingReasonQuote\":\"Dashboard_quittingReasonQuote__24vrf\",\"hoursMoneySavedDiv\":\"Dashboard_hoursMoneySavedDiv__mbRNX\",\"hoursMoneySaved\":\"Dashboard_hoursMoneySaved__1YE3f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__30W3M\",\"loginHeadingDiv\":\"Login_loginHeadingDiv__3JX7m\",\"loginHeading\":\"Login_loginHeading__3Psmo\",\"actions\":\"Login_actions__3b0PT\",\"switchToReg\":\"Login_switchToReg__1p3D8\",\"redirectToRegisterDiv\":\"Login_redirectToRegisterDiv__3IKeP\",\"messageDiv\":\"Login_messageDiv__39Yzc\",\"message\":\"Login_message__32EQb\",\"failureMsg\":\"Login_failureMsg__3jG2r\",\"successMsg\":\"Login_successMsg__2-qMo\",\"or\":\"Login_or__2L6oW\",\"autoLoginBtn\":\"Login_autoLoginBtn__37Lnr\",\"shake\":\"Login_shake__2TCaY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newDailyLogContainer\":\"NewDailyLog_newDailyLogContainer__1IPMc\",\"dailyLogImage\":\"NewDailyLog_dailyLogImage__1hOVo\",\"dailyLogButton\":\"NewDailyLog_dailyLogButton__3X7qW\",\"dailyLogButtonDiv\":\"NewDailyLog_dailyLogButtonDiv__2efqz\",\"addNewLogDiv\":\"NewDailyLog_addNewLogDiv__3R0GS\",\"addNewLogButton\":\"NewDailyLog_addNewLogButton__3Om6I\",\"newDailyLogFormHeadingDiv\":\"NewDailyLog_newDailyLogFormHeadingDiv__1U1wn\",\"newDailyLogFormHeading\":\"NewDailyLog_newDailyLogFormHeading__mBLNW\",\"dailyLogRow\":\"NewDailyLog_dailyLogRow__UZEgm\",\"calendarDiv\":\"NewDailyLog_calendarDiv__3Zork\",\"calendar\":\"NewDailyLog_calendar__3bF5r\",\"dailyLogDate\":\"NewDailyLog_dailyLogDate__2YY6H\",\"logHistoryDate\":\"NewDailyLog_logHistoryDate__IiCj0\",\"logHistoryStats\":\"NewDailyLog_logHistoryStats__1ESdC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"register\":\"Register_register__b4Eyv\",\"regHeadingDiv\":\"Register_regHeadingDiv__Yfn0A\",\"regHeading\":\"Register_regHeading__Gr-EI\",\"actions\":\"Register_actions__3fLPi\",\"switchToLogin\":\"Register_switchToLogin__3tVnK\",\"redirectToLoginDiv\":\"Register_redirectToLoginDiv__3Ojdx\",\"messageDiv\":\"Register_messageDiv__2JxFk\",\"message\":\"Register_message___N1zH\",\"failureMsg\":\"Register_failureMsg__3DLTA\",\"successMsg\":\"Register_successMsg__QC6DK\",\"shake\":\"Register_shake__2Qeqm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileForm\":\"ProfileForm_profileForm__3rHHV\",\"actions\":\"ProfileForm_actions__3UC0o\",\"profileFormHeadingDiv\":\"ProfileForm_profileFormHeadingDiv__38CkX\",\"profileFormHeading\":\"ProfileForm_profileFormHeading__2O9l7\",\"imageUploadedDivContainer\":\"ProfileForm_imageUploadedDivContainer__KM8FA\",\"imageUploadedThumbnail\":\"ProfileForm_imageUploadedThumbnail__1nirA\",\"imageUploadedDiv\":\"ProfileForm_imageUploadedDiv__3zOB2\",\"imageUploadedMsg\":\"ProfileForm_imageUploadedMsg__10NG1\",\"messageDiv\":\"ProfileForm_messageDiv__2CfiW\",\"message\":\"ProfileForm_message__wNqdk\",\"failureMsg\":\"ProfileForm_failureMsg__2aY-K\",\"successMsg\":\"ProfileForm_successMsg__2Q66d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dailyLogForm\":\"DailyLogForm_dailyLogForm__sX8M4\",\"actions\":\"DailyLogForm_actions__1d6Vo\",\"dailyLogFormHeadingDiv\":\"DailyLogForm_dailyLogFormHeadingDiv__2FOCZ\",\"dailyLogFormHeading\":\"DailyLogForm_dailyLogFormHeading__2zaEM\",\"dailyLogFormSubHeading\":\"DailyLogForm_dailyLogFormSubHeading__4bdL2\",\"formlegend\":\"DailyLogForm_formlegend__W4-Mu\",\"formlegendDiv\":\"DailyLogForm_formlegendDiv__1ffTN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"Input_control__7JYPz\",\"invalid\":\"Input_invalid__1XscM\",\"minMax\":\"Input_minMax__V_0B-\",\"inputDiv\":\"Input_inputDiv__1t2wE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"landingPage_container\":\"LandingPage_landingPage_container__UYN6R\",\"image_div\":\"LandingPage_image_div__b3YiW\",\"welcome_info_div\":\"LandingPage_welcome_info_div__2UUO_\",\"welcome_heading\":\"LandingPage_welcome_heading__2zpfc\",\"welcome_message\":\"LandingPage_welcome_message__36Fa9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dailyLogChart_container\":\"DailyLogChart_dailyLogChart_container__2MOff\",\"dailyLogChart_headingDiv\":\"DailyLogChart_dailyLogChart_headingDiv__23-cZ\",\"dailyLogChart_heading\":\"DailyLogChart_dailyLogChart_heading__1EaeR\",\"dailyLogChart_subHeading\":\"DailyLogChart_dailyLogChart_subHeading__2zGaD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2lgkF\",\"loading\":\"Button_loading__3pbz5\",\"dots\":\"Button_dots__vCb-X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorContainer\":\"Error_errorContainer__3wbAC\",\"centerAlign\":\"Error_centerAlign__3gY5g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1te4P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Progress_loader__2PEcj\",\"load8\":\"Progress_load8__3Vidi\",\"loader--hide\":\"Progress_loader--hide__8cOup\"};","import React from 'react'\n\nimport classes from './Input.module.css'\n\nconst Input = (props) => {\n    return (\n        <div\n            className={`${classes.control} ${props.isValid === false ? classes.invalid : ''\n                }`}\n        >\n            <label htmlFor={props.id}>{props.label}</label>\n            <div className={classes.inputDiv}>\n                {props.displayMinMax && <span className={classes.minMax}>{props.min}</span>}\n                <input\n                    type={props.type}\n                    id={props.id}\n                    value={props.value}\n                    onChange={props.onChange}\n                    onBlur={props.onBlur}\n                    max={props.max}\n                    min={props.min}\n                />\n                {props.displayMinMax && <span className={classes.minMax}>{props.max}</span>}\n            </div>\n        </div>\n    )\n}\n\nexport default Input","import React from 'react';\n\nimport classes from './Button.module.css';\n\nconst Button = (props) => {\n\n  let loading = '';\n  let disabled = props.disabled;\n  let children = props.children;\n  \n  if(props.isLoading) {\n    loading = classes.loading\n    disabled = true;\n    children = '';\n  }\n\n  return (\n    <button\n      type={props.type || 'button'}\n      className={`${classes.button} ${props.className} ${loading}`}\n      onClick={props.onClick}\n      disabled={disabled}\n      name={props.name}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useState, useEffect } from 'react';\n\nconst API_SERVER_BASE_URL = process.env.REACT_APP_API_SERVER_BASE_URL;\n\nconst AuthContext = React.createContext({\n    isLoading: false,\n    user: {},\n    isLoggedIn: false,\n    onLogout: () => { },\n    onLogin: (email, password) => { },\n    onRegister: (name, email, password) => { }\n})\n\nexport const AuthContextProvider = (props) => {\n\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [isLoading, setIsLoading] = useState(true);\n    const [user, setUser] = useState({});\n\n    useEffect(() => {\n        if (localStorage.getItem('user')) {\n            setUser(JSON.parse(localStorage.getItem('user')));\n            setIsLoggedIn(true);\n        }\n        setIsLoading(false);\n    }, [])\n\n    const loginHandler = async (email, password) => {\n\n        try {\n            const requestOptions = {\n                mode: 'cors',\n                method: 'POST',\n                headers: {\n                    'Accept': '*/*',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ \"email\": email, \"password\": password })\n            };\n\n            const response =\n                await fetch(`${API_SERVER_BASE_URL}/api/user/login`,\n                    requestOptions);\n\n            const data = await response.json();\n\n            if (!response.ok) {\n                throw new Error(data.message);\n            }\n\n            localStorage.setItem('user', JSON.stringify(data));\n            setUser(data);\n            setIsLoggedIn(true);\n\n            return { message: \"Login successful\", ok: true };\n        } catch (err) {\n            return { message: err.message, ok: false };\n        }\n    };\n\n    const logoutHandler = () => {\n        localStorage.removeItem('user');\n        setIsLoggedIn(false);\n        setIsLoading(false);\n    };\n\n    const registerationHandler = async (name, email, password) => {\n\n        try {\n            const requestOptions = {\n                mode: 'cors',\n                method: 'POST',\n                headers: {\n                    'Accept': '*/*',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    \"name\": name,\n                    \"email\": email,\n                    \"password\": password\n                })\n            };\n\n            const response =\n                await fetch(`${API_SERVER_BASE_URL}/api/user/register`,\n                    requestOptions);\n\n            const data = await response.json();\n\n            if (!response.ok) {\n                throw new Error(data.message);\n            }\n\n            return {\n                message: `Registration successful.\n                An email has been sent to your inbox. \n            Please verify your email to proceed. \n            [If the email has not arrived \n            please be sure to check your spam folder.]`, ok: true\n            };\n        } catch (err) {\n            return { message: err.message, ok: false };\n        }\n    }\n\n    return (\n        <AuthContext.Provider value={{\n            isLoading: isLoading,\n            user: user,\n            isLoggedIn: isLoggedIn,\n            onLogout: logoutHandler,\n            onLogin: loginHandler,\n            onRegister: registerationHandler\n        }}\n        >\n            {props.children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthContext;","import React, { useState, useEffect, useContext, useCallback } from 'react';\nimport AuthContext from './user-context';\n\nconst API_SERVER_BASE_URL = process.env.REACT_APP_API_SERVER_BASE_URL;\n\nconst ApiContext = React.createContext({\n    profile: {},\n    dailyLog: {},\n    images: [],\n    isLoading: false,\n    saveProfile: params => { },\n    updateProfile: params => { },\n    updateDailyLog: params => { },\n    uploadImage: params => { },\n    resetState: params => { }\n})\n\nexport const ApiContextProvider = (props) => {\n\n    const [profile, setProfile] = useState({});\n    const [dailyLog, setDailyLog] = useState({});\n    const [isLoading, setIsLoading] = useState(true);\n    const [images, setImages] = useState([]);\n\n    const authCtx = useContext(AuthContext);\n    const user = authCtx.user;\n\n    // FETCH PROFILE\n    const fetchProfileHandler = useCallback(async () => {\n\n        try {\n            const requestOptions = {\n                mode: 'cors',\n                method: 'GET',\n                headers: {\n                    'auth-token': user.token,\n                    'Accept': '*/*',\n                    'Content-Type': 'application/json'\n                }\n            };\n\n            const response =\n                await fetch(`${API_SERVER_BASE_URL}/api/profiles/${user.userId}`,\n                    requestOptions);\n\n            if (!response.ok) {\n                throw new Error('Something went wrong!');\n            }\n\n            const profileData = await response.json();\n            setProfile(profileData);\n\n            return { message: \"Profile fetched successfully\", ok: true };\n\n        } catch (err) {\n            return { message: err.message, ok: false };\n        }\n\n    }, [user.token, user.userId]);\n\n\n    // SAVE PROFILE\n    const saveProfile = async (params) => {\n        let body = {\n            userId: user.userId,\n            quittingReason: params.quittingReason,\n            smokingTimesPerDay: params.smokingTimesPerDay,\n            hoursStonedPerDay: params.hoursStonedPerDay,\n            smokingCostPerWeek: params.smokingCostPerWeek,\n            soberDate: params.soberDate\n        }\n\n        try {\n            const requestOptions = {\n                mode: 'cors',\n                method: 'POST',\n                headers: {\n                    'auth-token': user.token,\n                    'Accept': '*/*',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(body)\n            };\n\n            const response =\n                await fetch(`${API_SERVER_BASE_URL}/api/profiles`,\n                    requestOptions);\n\n            const data = await response.json();\n\n            if (!response.ok) {\n                throw new Error(data.message);\n            }\n\n            setProfile(data);\n\n            return fetchDailyLog();\n\n        } catch (err) {\n            return { message: err.message, ok: false };\n        }\n    }\n\n\n    // FETCH DAILYLOG\n    const fetchDailyLog = useCallback(async () => {\n\n        try {\n            const requestOptions = {\n                mode: 'cors',\n                method: 'GET',\n                headers: {\n                    'auth-token': user.token,\n                    'Accept': '*/*',\n                    'Content-Type': 'application/json'\n                }\n            };\n\n            const response =\n                await fetch(`${API_SERVER_BASE_URL}/api/dailyLog/${user.userId}`,\n                    requestOptions);\n\n            const data = await response.json();\n\n            if (!response.ok) {\n                throw new Error(data.message);\n            }\n\n            setDailyLog(data);\n\n            return { message: \"Daily Log fetched successfully\", ok: true };\n\n        } catch (err) {\n            return { message: err.message, ok: false };\n        }\n\n    }, [user.token, user.userId]);\n\n\n    // UPDATE PROFILE\n    const updateProfile = async (params) => {\n        let body = {\n            userId: user.userId,\n            quittingReason: params.quittingReason,\n            quittingReasonPhoto: params.quittingReasonPhoto,\n            smokingTimesPerDay: params.smokingTimesPerDay,\n            hoursStonedPerDay: params.hoursStonedPerDay,\n            smokingCostPerWeek: params.smokingCostPerWeek,\n            soberDate: params.soberDate\n        }\n\n        try {\n            const requestOptions = {\n                mode: 'cors',\n                method: 'PATCH',\n                headers: {\n                    'auth-token': user.token,\n                    'Accept': '*/*',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(body)\n            };\n\n            const response =\n                await fetch(`${API_SERVER_BASE_URL}/api/profiles/${user.userId}`,\n                    requestOptions);\n\n            const data = await response.json();\n\n            if (!response.ok) {\n                throw new Error(data.message);\n            }\n\n            setProfile(data);\n\n            return { message: \"Profile updated successfully\", ok: true }\n\n        } catch (err) {\n            return { message: err.message, ok: false };\n        }\n    }\n\n\n    // UPDATE DAILY LOG\n    const updateDailyLog = async (params) => {\n        let body = {\n            cravings: params.cravings,\n            irritability: params.irritability,\n            anxiety: params.anxiety,\n            insomnia: params.insomnia,\n            appetiteLoss: params.appetiteLoss,\n            moodSwings: params.moodSwings,\n            depression: params.depression,\n            coldSweats: params.coldSweats,\n            motivation: params.motivation,\n            happiness: params.happiness,\n            confidence: params.confidence\n        }\n\n        try {\n            const requestOptions = {\n                mode: 'cors',\n                method: 'PATCH',\n                headers: {\n                    'auth-token': user.token,\n                    'Accept': '*/*',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(body)\n            };\n\n            const response =\n                await fetch(`${API_SERVER_BASE_URL}/api/dailyLog/${user.userId}`,\n                    requestOptions);\n\n            const data = await response.json();\n\n            if (!response.ok) {\n                throw new Error(data.message);\n            }\n\n            setDailyLog(data);\n\n            return { message: \"Daily Log updated successfully\", ok: true }\n\n        } catch (err) {\n            return { message: err.message, ok: false };\n        }\n    }\n\n    // UPLOAD IMAGE\n    const uploadImage = async (params) => {\n        let body = {\n            userId: user.userId,\n            imageName: params.imageName,\n            imageData: params.imageData,\n            type: params.type\n        }\n\n        try {\n            const requestOptions = {\n                mode: 'cors',\n                method: 'POST',\n                headers: {\n                    'auth-token': user.token,\n                    'Accept': '*/*',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(body)\n            };\n\n            const response =\n                await fetch(`${API_SERVER_BASE_URL}/api/uploadImage`,\n                    requestOptions);\n\n            const data = await response.json();\n\n            if (!response.ok) {\n                throw new Error(data.message);\n            }\n\n            setImages(prevValue => {\n                return [...prevValue, data];\n            });\n\n            return data;\n\n        } catch (err) {\n            return { message: err.message, ok: false };\n        }\n    }\n\n    // FETCH IMAGE\n    // const fetchImage =\n    useCallback(async (params) => {\n\n        try {\n            const requestOptions = {\n                mode: 'cors',\n                method: 'GET',\n                headers: {\n                    'auth-token': user.token,\n                    'Accept': '*/*',\n                    'Content-Type': 'application/json'\n                }\n            };\n\n            const response =\n                await fetch(`${API_SERVER_BASE_URL}/api/uploadImage/` +\n                    user.userId + '/' +\n                    'quitting-reason',\n                    requestOptions);\n\n            const data = await response.json();\n\n            if (!response.ok) {\n                throw new Error(data.message);\n            }\n\n            setImages(prevValue => {\n                return [...prevValue, data];\n            });\n\n            return data;\n\n        } catch (err) {\n            return { message: err.message, ok: false };\n        }\n\n    }, [user.userId, user.token]);\n\n    const resetState = () => {\n        setProfile('');\n        setDailyLog('');\n        setImages('');\n        setIsLoading(false);\n    }\n\n    useEffect(() => {\n        if (authCtx.isLoggedIn) {\n            setIsLoading(true);\n\n            const fetchProfile = fetchProfileHandler();\n            const fetchLog = fetchDailyLog();\n            // const fetchImg = fetchImage();\n\n            Promise.all([fetchProfile, fetchLog])\n                .then(values => {\n                    setIsLoading(false);\n                })\n                .catch(error => {\n                    setIsLoading(false);\n                });\n        }\n    }, [authCtx.isLoggedIn, fetchDailyLog, fetchProfileHandler])\n\n    return (\n        <ApiContext.Provider value={{\n            profile: profile,\n            dailyLog: dailyLog,\n            images: images,\n            isLoading: isLoading,\n            saveProfile: saveProfile,\n            updateProfile: updateProfile,\n            updateDailyLog: updateDailyLog,\n            uploadImage: uploadImage,\n            resetState: resetState\n        }}\n        >\n            {props.children}\n        </ApiContext.Provider>\n    )\n}\n\nexport default ApiContext;","import React from 'react';\n\nimport classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <div className={`${classes.card} ${props.className}`}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState, useContext, useEffect } from 'react';\n\nimport Input from '../UI/Input/Input';\nimport Button from '../UI/Button/Button';\nimport ApiContext from '../../contexts/api-context';\n\nimport styles from './ProfileForm.module.css'\nimport Card from '../UI/Card/Card';\n\nconst ProfileForm = (props) => {\n\n    const apiCtx = useContext(ApiContext);\n    const profile = apiCtx.profile;\n\n    const [quittingReason, setQuittingReason] = useState('');\n    const [smokingTimesPerDay, setSmokingTimesPerDay] = useState(0);\n    const [hoursStonedPerDay, setHoursStonedPerDay] = useState(0);\n    const [smokingCostPerWeek, setSmokingCostPerWeek] = useState(0);\n    const [soberDate, setSoberDate] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [isError, setIsError] = useState(false);\n    const [message, setMessage] = useState('');\n\n    // const [quittingReasonPhoto, setQuittingReasonPhoto] = useState('');\n    // const [imageUploaded, setImageUploaded] = useState(0);\n    // const [showThumbnail, setShowThumbnail] = useState(false);\n\n    const submitHandler = async (event) => {\n        event.preventDefault();\n        setIsError(false);\n        setMessage('');\n\n        let params = {\n            quittingReason: quittingReason,\n            // quittingReasonPhoto: quittingReasonPhoto,\n            smokingTimesPerDay: smokingTimesPerDay,\n            hoursStonedPerDay: hoursStonedPerDay,\n            smokingCostPerWeek: smokingCostPerWeek,\n            soberDate: soberDate\n        }\n\n        setIsLoading(true);\n        let response = {};\n        if (profile.soberDate && profile.soberDate && '' !== profile.soberDate) {\n            response = await apiCtx.updateProfile(params);\n        } else {\n            response = await apiCtx.saveProfile(params);\n        }\n        setIsLoading(false);\n\n        if (!response.ok) {\n            setIsError(true);\n        }\n\n        setMessage(response.message);\n\n    }\n\n    const quittingReasonHandler = (event) => {\n        setQuittingReason(event.target.value);\n    };\n\n    const smokingTimesPerDayHandler = (event) => {\n        setSmokingTimesPerDay(event.target.value);\n    };\n\n    const hoursStonedPerDayHandler = (event) => {\n        setHoursStonedPerDay(event.target.value);\n    };\n\n    const smokingCostPerWeekHandler = (event) => {\n        setSmokingCostPerWeek(event.target.value);\n    };\n\n    const soberDateHandler = (event) => {\n        setSoberDate(event.target.value);\n    };\n\n    const dateFormatter = (date) => {\n        date.setMinutes(date.getMinutes() - date.getTimezoneOffset());\n        return date.toISOString().slice(0, 16);\n    }\n\n    // Commenting below code for uploading photo and converting to base64\n\n    // const toBase64 = file => new Promise((resolve, reject) => {\n    //     const reader = new FileReader();\n    //     reader.readAsDataURL(file);\n    //     reader.onload = () => resolve(reader.result);\n    //     reader.onerror = error => reject(error);\n    // });\n\n    // const onImageChange = async event => {\n    //     if (event.target.files && event.target.files[0]) {\n    //         setShowThumbnail(true);\n\n    //         let img = event.target.files[0];\n\n    //         let base64Img = await toBase64(img)\n\n    //         setQuittingReasonPhoto(base64Img);\n\n    //         let imageObj = {\n    //             imageName: img.name,\n    //             imageData: base64Img,\n    //             type: 'quitting-reason'\n    //         }\n\n    //         setImageUploaded(1);\n    //         await apiCtx.uploadImage(imageObj);\n    //         setImageUploaded(2);\n\n    //     }\n    // };\n\n    useEffect(() => {\n        if (profile) {\n            setQuittingReason(profile.quittingReason);\n            setSmokingTimesPerDay(profile.smokingTimesPerDay);\n            setHoursStonedPerDay(profile.hoursStonedPerDay);\n            setSmokingCostPerWeek(profile.smokingCostPerWeek);\n            setSoberDate(profile.soberDate ? dateFormatter(new Date(profile.soberDate)) : '');\n        }\n        return () => {\n            setQuittingReason('')\n            setSmokingTimesPerDay(0);\n            setHoursStonedPerDay(0);\n            setSmokingCostPerWeek(0);\n            setSoberDate('');\n        }\n    }, [profile])\n\n    let msgClass = styles.successMsg;\n    if (isError) {\n        msgClass = styles.failureMsg;\n    }\n\n    return (\n        <>\n            <div className={styles.profileFormHeadingDiv}>\n                <h1 className={styles.profileFormHeading}>\n                    Update Profile\n                </h1>\n            </div>\n\n            <div className={`${msgClass} ${styles.messageDiv}`}>\n                <p className={styles.message}>{message}</p>\n            </div>\n\n            <Card className={styles.profileForm}>\n                <div>\n                    <form onSubmit={submitHandler}>\n                        <Input\n                            id=\"quittingReason\"\n                            label=\"Who or what are you quitting for?\"\n                            type=\"text\"\n                            value={quittingReason || ''}\n                            onChange={quittingReasonHandler}\n                        />\n                        {/* Commenting below code for uploading quitting reason photo */}\n                        {/* <Input\n                            id=\"quittingReasonPhoto\"\n                            label=\"Upload an image of the person or the thing you're quitting for?\"\n                            type=\"file\"\n                            onChange={onImageChange}\n                        />\n                        <div className={styles.imageUploadedDivContainer}>\n                            {showThumbnail &&\n                                <>\n                                    <div className={styles.imageUploadedDiv}>\n                                        <img alt=\"quitting-smoking\"\n                                            className={styles.imageUploadedThumbnail}\n                                            src={quittingReasonPhoto} />\n                                    </div>\n                                    <div className={styles.imageUploadedMsg}>\n                                        {imageUploaded === 1 && <span>Image Uploading...</span>}\n                                        {imageUploaded === 2 && <span>Image Uploaded</span>}\n                                    </div>\n                                </>\n                            }\n                        </div> */}\n                        <Input\n                            id=\"smokingTimesPerDay\"\n                            label=\"Smoke sesh's per day\"\n                            type=\"number\"\n                            value={smokingTimesPerDay || 0}\n                            onChange={smokingTimesPerDayHandler}\n                        />\n                        <Input\n                            id=\"hoursStonedPerDay\"\n                            label=\"How many hours per day were you stoned?\"\n                            type=\"number\"\n                            value={hoursStonedPerDay || 0}\n                            onChange={hoursStonedPerDayHandler}\n                        />\n                        <Input\n                            id=\"smokingCostPerWeek\"\n                            label=\"How much did you spend per week on weed? ($)\"\n                            type=\"number\"\n                            value={smokingCostPerWeek || 0}\n                            onChange={smokingCostPerWeekHandler}\n                        />\n                        <Input\n                            id=\"soberDate\"\n                            label=\"When was the last time you smoked?\"\n                            type=\"datetime-local\"\n                            max={dateFormatter(new Date())}\n                            value={soberDate || ''}\n                            onChange={soberDateHandler}\n                        />\n                        <br />\n                        <div className={styles.actions}>\n                            <Button\n                                type=\"submit\"\n                                className={styles.btn}\n                                isLoading={isLoading}\n                                // disabled={imageUploaded === 1 ? true : false}\n                            >\n                                Submit\n                            </Button>\n                        </div>\n                    </form>\n                </div>\n            </Card>\n        </>\n    )\n}\n\nexport default ProfileForm;","import React from 'react'\nimport styles from './Progress.module.css'\n\nconst Progress = () => {\n    return (\n        <div className={styles.loader}></div>\n    )\n}\n\nexport default Progress;","import React, { useContext } from 'react';\nimport ProfileForm from '../Profile/ProfileForm';\nimport ApiContext from '../../contexts/api-context';\nimport { Redirect } from 'react-router';\n\nimport Progress from '../UI/Progress/Progress'\n\nconst Home = () => {\n  \n  const apiCtx = useContext(ApiContext);\n\n  return (\n    <>\n      {apiCtx.isLoading && <Progress />}\n      {!apiCtx.isLoading && !apiCtx.profile.userId && <ProfileForm />}\n      {!apiCtx.isLoading && apiCtx.profile.userId && <Redirect to=\"/dashboard\" />}\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect, useCallback, useContext } from 'react'\nimport ApiContext from '../../contexts/api-context';\nimport styles from './Dashboard.module.css';\n\nimport Progress from '../UI/Progress/Progress';\n\n\nconst Dashboard = (props) => {\n\n    const apiCtx = useContext(ApiContext);\n    const profile = apiCtx.profile;\n\n    const {\n        quittingReason,\n        // smokingTimesPerDay,\n        hoursStonedPerDay,\n        smokingCostPerWeek,\n        soberDate\n    } = profile;\n\n    const [elapsedSoberDate, setElapsedSoberDate] = useState(\"0d 00h 00m 00s\");\n    const [moneySavedTillNow, setMoneySavedTillNow] = useState(\"0.00\");\n    const [moneySavedPerYear, setMoneySavedPerYear] = useState(\"0.00\");\n    const [hoursNotStoned, setHoursNotStoned] = useState(\"0\");\n\n    const timeElapsedSoberDate = useCallback(() => {\n        setInterval(() => {\n            let timeDiff = Date.now() - Date.parse(soberDate);\n            timeDiff = timeDiff / 1000;\n\n            let seconds = Math.floor(timeDiff % 60);\n            let secondsAsString = seconds < 10 ? \"0\" + seconds : seconds;\n\n            timeDiff = Math.floor(timeDiff / 60);\n            let minutes = timeDiff % 60;\n            let minutesAsString = minutes < 10 ? \"0\" + minutes : minutes;\n\n            timeDiff = Math.floor(timeDiff / 60);\n            let hours = timeDiff % 24;\n            let totalHoursAsString = hours < 10 ? \"0\" + hours : hours;\n\n            timeDiff = Math.floor(timeDiff / 24);\n            let days = timeDiff;\n\n            setElapsedSoberDate(\n                days + \"d \" +\n                totalHoursAsString + \"h \" +\n                minutesAsString + \"m \" +\n                secondsAsString + \"s\");\n        }, 200);\n    }, [soberDate]);\n\n    const moneySaved = useCallback(() => {\n        let timeDiff = Date.now() - Date.parse(soberDate);\n        let millisecondsInADay = 1000 * 60 * 60 * 24;\n        let smokingCostPerDay = smokingCostPerWeek / 7;\n\n        let moneySaved = timeDiff / millisecondsInADay * smokingCostPerDay;\n        setMoneySavedTillNow(moneySaved.toFixed(2));\n\n\n        let moneySavedPerYear = smokingCostPerWeek * 52;\n        setMoneySavedPerYear(moneySavedPerYear.toFixed(2));\n\n        let hoursNotStoned = hoursStonedPerDay / 24 * timeDiff / (1000 * 60 * 60);\n        setHoursNotStoned(hoursNotStoned.toFixed(2));\n    }, [smokingCostPerWeek, soberDate, hoursStonedPerDay]);\n\n\n    useEffect(() => {\n        if (Object.keys(profile).length > 0) {\n            timeElapsedSoberDate();\n            moneySaved();\n        }\n        return () => {\n            setElapsedSoberDate('')\n            setMoneySavedTillNow('')\n            setMoneySavedPerYear('');\n        }\n    }, [timeElapsedSoberDate, moneySaved, profile]);\n\n    return (\n        <>\n            {apiCtx.isLoading && <Progress />}\n\n            {!apiCtx.isLoading &&\n                <div>\n                    <div className={styles.elapsedSoberTimeContainer}>\n                        <span className={styles.smokeFreeHeading}>Time Smoke free</span>\n                        <div className={styles.elapsedSoberTime}>{elapsedSoberDate}</div>\n                    </div>\n\n                    <div className={styles.moneySavedContainer}>\n                        <div className={styles.hoursMoneySavedDiv}>\n                            <div className={styles.hoursMoneySaved}>\n                                <span className={styles.moneySavedLabel}>Not stoned</span>\n                                <div className={styles.moneySaved}>{hoursNotStoned} hrs</div>\n                            </div>\n                            <div className={styles.hoursMoneySaved}>\n                                <span className={styles.moneySavedLabel}>Money saved</span>\n                                <div className={styles.moneySaved}>${moneySavedTillNow}</div>\n                            </div>\n                        </div>\n                        <br />\n                        <span className={styles.moneySavedLabel}>Money saved per year</span>\n                        <div className={styles.moneySaved}>${moneySavedPerYear}</div>\n                    </div><hr />\n\n                    <div className={styles.quittingReasonContainer}>\n                        <span className={styles.quittingReasonLabel}>I'm quitting for</span>\n                        <div className={styles.quittingReason}>\"{quittingReason}\"</div>\n                        <span className={styles.quittingReasonQuote}>Once you learn to quit, it becomes a habit</span>\n                    </div><hr />\n                </div>\n            }\n        </>\n    )\n}\n\nexport default Dashboard;","import React, { useState, useEffect, useReducer, useContext } from 'react';\n\nimport { withRouter } from 'react-router';\n\nimport AuthContext from '../../../contexts/user-context';\nimport Card from '../../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../../UI/Button/Button';\nimport Input from '../../UI/Input/Input'\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'EMAIL_CHANGE') {\n    return { value: action.val, isValid: action.val.includes('@') };\n  }\n  if (action.type === 'EMAIL_BLUR') {\n    return { value: state.value, isValid: state.value.includes('@') };\n  }\n  return { value: '', isValid: false };\n}\n\nconst passReducer = (state, action) => {\n  if (action.type === 'PASS_CHANGE') {\n    return { value: action.val, isValid: true };\n  }\n  if (action.type === 'PASS_BLUR') {\n    return { value: state.value, isValid: true };\n  }\n  return { value: '', isValid: false };\n}\n\nconst AUTO_LOGIN_KEY = \"auto-login\"\nconst AUTO_LOGIN_EMAIL = process.env.REACT_APP_AUTO_LOGIN_EMAIL\nconst AUTO_LOGIN_PASS = process.env.REACT_APP_AUTO_LOGIN_PASS\n\nconsole.log(AUTO_LOGIN_EMAIL)\n\nconst Login = (props) => {\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailEntered, emailDispatch] = useReducer(emailReducer,\n    { value: '', isValid: null });\n\n  const [passEntered, passDispatch] = useReducer(passReducer,\n    { value: '', isValid: null });\n\n  const { isValid: emailIsValid } = emailEntered;\n  const { isValid: passIsValid } = passEntered;\n  const [isLoading, setIsLoading] = useState(false);\n  const [shakeonError, setShakeonError] = useState('');\n  const [isError, setIsError] = useState(false);\n  const [message, setMessage] = useState('');\n\n  const authCtx = useContext(AuthContext);\n\n  useEffect(() => {\n    const formValidityTimout = setTimeout(() => {\n      setFormIsValid(\n        emailIsValid && passIsValid\n      );\n    }, 500);\n\n    return () => {\n      clearTimeout(formValidityTimout);\n      setFormIsValid(false);\n    }\n  }, [emailIsValid, passIsValid])\n\n  const emailChangeHandler = (event) => {\n    emailDispatch({ type: 'EMAIL_CHANGE', val: event.target.value });\n  };\n\n  const passwordChangeHandler = (event) => {\n    passDispatch({ type: 'PASS_CHANGE', val: event.target.value });\n  };\n\n  const validateEmailHandler = () => {\n    emailDispatch({ type: 'EMAIL_BLUR' });\n  };\n\n  const validatePasswordHandler = () => {\n    passDispatch({ type: 'PASS_BLUR' })\n  };\n\n  const handleLoginError = (message) => {\n    setIsError(true);\n    setMessage(message);\n    setShakeonError(classes.shake);\n    setTimeout(() => {\n      setShakeonError('');\n    }, 250);\n  }\n\n  const submitHandler = async (event) => {\n    event.preventDefault();\n    \n    let email, pass;\n    if(AUTO_LOGIN_KEY === event.nativeEvent.submitter.name) {\n      email = AUTO_LOGIN_EMAIL\n      pass = AUTO_LOGIN_PASS\n    } else {\n      email = emailEntered.value\n      pass = passEntered.value\n    }\n\n    setIsLoading(true);\n    const response = await authCtx.onLogin(email, pass);\n    setIsLoading(false);\n\n    if (!response.ok) {\n      handleLoginError(response.message);\n      return;\n    }\n\n    setMessage(response.message);\n\n    return props.history.push(\"/home\");\n  };\n\n  const switchToRegister = () => {\n    return props.history.push(\"/register\");\n  }\n\n  let msgClass = classes.successMsg;\n  if (isError) {\n    msgClass = classes.failureMsg;\n  }\n\n  return (\n    <>\n      <div className={classes.loginHeadingDiv}>\n        <h1 className={classes.loginHeading}>\n          Login\n        </h1>\n      </div>\n      <Card className={`${classes.login} ${shakeonError}`}>\n        <form onSubmit={submitHandler}>\n          <Input\n            id=\"email\"\n            label=\"E-mail\"\n            type=\"email\"\n            isValid={emailIsValid}\n            value={emailEntered.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n          <Input\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            isValid={passIsValid}\n            value={passEntered.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n          <div className={classes.actions}>\n            <Button\n              type=\"submit\"\n              className={classes.btn}\n              disabled={!formIsValid}\n              isLoading={isLoading}>\n              Login\n            </Button>\n          </div>\n          <div className={classes.or}>OR</div>\n          <div className={classes.actions}>\n            <Button\n              type=\"submit\"\n              className={classes.autoLoginBtn}\n              disabled={false}\n              isLoading={isLoading}\n              name={AUTO_LOGIN_KEY}>\n              Auto-Login ⚡\n            </Button>\n          </div>\n          <div className={classes.redirectToRegisterDiv}>\n            <p>If you are a new user,&nbsp;\n              <span className={classes.switchToReg} onClick={switchToRegister}>\n                <u>Register here</u>\n              </span>\n            </p>\n          </div>\n        </form>\n      </Card>\n      <div className={`${msgClass} ${classes.messageDiv}`}>\n        <p className={classes.message}>{message}</p>\n      </div>\n    </>\n  );\n};\n\nexport default withRouter(Login);\n","import React, { useState, useEffect, useReducer, useContext } from 'react';\nimport { withRouter } from 'react-router';\n\nimport AuthContext from '../../../contexts/user-context';\nimport Card from '../../UI/Card/Card';\nimport classes from './Register.module.css';\nimport Button from '../../UI/Button/Button';\nimport Input from '../../UI/Input/Input'\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'EMAIL_CHANGE') {\n    return { value: action.val, isValid: action.val.includes('@') };\n  }\n  if (action.type === 'EMAIL_BLUR') {\n    return { value: state.value, isValid: state.value.includes('@') };\n  }\n  return { value: '', isValid: false };\n}\n\nconst passReducer = (state, action) => {\n  if (action.type === 'PASS_CHANGE') {\n    return { value: action.val, isValid: true };\n  }\n  if (action.type === 'PASS_BLUR') {\n    return { value: state.value, isValid: true };\n  }\n  return { value: '', isValid: false };\n}\n\nconst Register = (props) => {\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailEntered, emailDispatch] = useReducer(emailReducer,\n    { value: '', isValid: null });\n\n  const [passEntered, passDispatch] = useReducer(passReducer,\n    { value: '', isValid: null });\n\n  const { isValid: emailIsValid } = emailEntered;\n  const { isValid: passIsValid } = passEntered;\n\n  const [nameEntered, setNameEntered] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [shakeonError, setShakeonError] = useState('');\n  const [isError, setIsError] = useState(false);\n  const [message, setMessage] = useState('');\n\n  const authCtx = useContext(AuthContext);\n\n  useEffect(() => {\n    const formValidityTimout = setTimeout(() => {\n      setFormIsValid(\n        emailIsValid && passIsValid\n      );\n    }, 500);\n\n    return () => {\n      clearTimeout(formValidityTimout);\n    }\n  }, [emailIsValid, passIsValid])\n\n  const emailChangeHandler = (event) => {\n    emailDispatch({ type: 'EMAIL_CHANGE', val: event.target.value });\n  };\n\n  const passwordChangeHandler = (event) => {\n    passDispatch({ type: 'PASS_CHANGE', val: event.target.value });\n  };\n\n  const nameChangeHandler = (event) => {\n    setNameEntered(event.target.value);\n  };\n\n  const validateEmailHandler = () => {\n    emailDispatch({ type: 'EMAIL_BLUR' });\n  };\n\n  const validatePasswordHandler = () => {\n    passDispatch({ type: 'PASS_BLUR' })\n  };\n\n  const handleRegistrationError = (message) => {\n    setIsError(true);\n    setMessage(message);\n    setShakeonError(classes.shake);\n    setTimeout(() => {\n      setShakeonError('');\n    }, 250);\n  }\n\n  const submitHandler = async (event) => {\n    event.preventDefault();\n\n    setIsLoading(true);\n    const response = await authCtx.onRegister(nameEntered, emailEntered.value, passEntered.value);\n    setIsLoading(false);\n\n    if (!response.ok) {\n      handleRegistrationError(response.message);\n      return;\n    }\n\n    setMessage(response.message);\n  };\n\n  const switchToLogin = () => {\n    return props.history.push(\"/login\");\n  }\n\n  let msgClass = classes.successMsg;\n  if (isError) {\n    msgClass = classes.failureMsg;\n  }\n\n  return (\n    <>\n      <div className={classes.regHeadingDiv}>\n        <h1 className={classes.regHeading}>\n          Register\n        </h1>\n      </div>\n      <Card className={`${classes.register} ${shakeonError}`}>\n        <form onSubmit={submitHandler}>\n          <Input\n            id=\"name\"\n            label=\"Name\"\n            type=\"text\"\n            onChange={nameChangeHandler}\n            value={nameEntered}\n          />\n          <Input\n            id=\"email\"\n            label=\"E-mail\"\n            type=\"email\"\n            isValid={emailIsValid}\n            value={emailEntered.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n          <Input\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            isValid={passIsValid}\n            value={passEntered.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n          <div className={classes.actions}>\n            <Button\n              type=\"submit\"\n              className={classes.btn}\n              disabled={!formIsValid}\n              isLoading={isLoading}>\n              Register\n            </Button>\n          </div>\n          <div className={classes.redirectToLoginDiv}>\n            <p>If you're already a user, &nbsp;\n              <span className={classes.switchToLogin} onClick={switchToLogin}>\n                <u>Login here</u>\n              </span>\n            </p>\n          </div>\n        </form>\n      </Card>\n      <div className={`${msgClass} ${classes.messageDiv}`}>\n        <p className={classes.message}>{message}</p>\n      </div>\n    </>\n  );\n};\n\nexport default withRouter(Register);\n","import React from 'react'\n\nimport './DrawerToggleButton.css'\n\nconst drawerToggleButton = props => (\n  <button className=\"toggle-button\" onClick={props.click}>\n    <div className=\"toggle-button__line\" />\n    <div className=\"toggle-button__line\" />\n    <div className=\"toggle-button__line\" />\n  </button>\n)\n\nexport default drawerToggleButton","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport AuthContext from '../../contexts/user-context';\nimport ApiContext from '../../contexts/api-context';\nimport DrawerToggleButton from '../SideDrawer/DrawerToggleButton';\nimport './Toolbar.css';\n\nconst Navigation = (props) => {\n\n  const ctx = useContext(AuthContext);\n  const apiCtx = useContext(ApiContext);\n  const profile = apiCtx.profile;\n\n  let updatedProfile = false;\n\n  if (profile && profile.hasOwnProperty('userId')) {\n    updatedProfile = true;\n  }\n\n  const onLogout = () => {\n    apiCtx.resetState();\n    ctx.onLogout();\n  }\n\n  return (\n    <header className=\"toolbar\">\n      <nav className=\"toolbar__navigation\">\n        <div className=\"toolbar__toggle-button\">\n          <DrawerToggleButton click={props.drawerClickHandler} />\n        </div>\n        <div className=\"toolbar__logo\">\n          <Link to=\"/\">\n            <div id=\"app-logo\"></div>\n          </Link>\n        </div>\n        <div className=\"spacer\" />\n        <div className=\"toolbar_navigation-items\">\n          <ul>\n            {ctx.isLoggedIn && !apiCtx.isLoading && !updatedProfile && (\n              <li>\n                <Link to=\"/home\">Home</Link>\n              </li>\n            )}\n            {ctx.isLoggedIn && updatedProfile && (\n              <li>\n                <Link to=\"/dashboard\">Dashboard</Link>\n              </li>\n            )}\n            {ctx.isLoggedIn && updatedProfile && (\n              <li>\n                <Link to=\"/dailyLog\">Daily Log</Link>\n              </li>\n            )}\n            {ctx.isLoggedIn && updatedProfile && (\n              <li>\n                <Link to=\"/progress\">Progress</Link>\n              </li>\n            )}\n            {ctx.isLoggedIn && updatedProfile && (\n              <li>\n                <Link to=\"/profileForm\">Profile</Link>\n              </li>\n            )}\n            {!ctx.isLoggedIn && (\n              <li>\n                <Link to=\"/login\">Login\n                  {/* <i class=\"arrow down\"></i> */}\n                </Link>\n                {/* <div className=\"sub-menu\">\n                  <ul>\n                    <li>Login2</li>\n                    <li>Login3</li>\n                  </ul>\n                </div> */}\n              </li>\n            )}\n            {!ctx.isLoggedIn && (\n              <li>\n                <Link to=\"/register\">Register</Link>\n              </li>\n            )}\n            {ctx.isLoggedIn && (\n              <li>\n                <button className=\"logout-button\" onClick={onLogout}>Logout</button>\n              </li>\n            )}\n          </ul>\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nexport default Navigation;\n","import React, {useContext} from 'react'\nimport { Link } from 'react-router-dom';\n\nimport AuthContext from '../../contexts/user-context';\nimport ApiContext from '../../contexts/api-context';\n\nimport './SideDrawer.css'\n\nconst SideDrawer = props => {\n\n  const ctx = useContext(AuthContext);\n  const apiCtx = useContext(ApiContext);\n  const profile = apiCtx.profile;\n  \n  let updatedProfile = false;\n  \n  if(profile && profile.hasOwnProperty('userId')) {\n    updatedProfile = true;\n  }\n\n  let drawerClasses = 'side-drawer'\n  if(props.show) {\n    drawerClasses = 'side-drawer open';\n  }\n\n  const onLogout = () => {\n    apiCtx.resetState();\n    ctx.onLogout();\n  }\n\n  return (\n    <nav className={drawerClasses}>\n      <ul>\n            {ctx.isLoggedIn && !apiCtx.isLoading && !updatedProfile && (\n              <li>\n                <Link to=\"/home\">Home</Link>\n              </li>\n            )}\n            {ctx.isLoggedIn && updatedProfile && (\n              <li>\n                <Link to=\"/dashboard\">Dashboard</Link>\n              </li>\n            )}\n            {ctx.isLoggedIn && updatedProfile && (\n              <li>\n                <Link to=\"/dailyLog\">Daily Log</Link>\n              </li>\n            )}\n            {ctx.isLoggedIn && updatedProfile && (\n              <li>\n                <Link to=\"/progress\">Progress</Link>\n              </li>\n            )}\n            {ctx.isLoggedIn && updatedProfile && (\n              <li>\n                <Link to=\"/profileForm\">Profile</Link>\n              </li>\n            )}\n            {!ctx.isLoggedIn && (\n              <li>\n                <Link to=\"/login\">Login\n                  {/* <i class=\"arrow down\"></i> */}\n                </Link>\n                {/* <div className=\"sub-menu\">\n                  <ul>\n                    <li>Login2</li>\n                    <li>Login3</li>\n                  </ul>\n                </div> */}\n              </li>\n            )}\n            {!ctx.isLoggedIn && (\n              <li>\n                <Link to=\"/register\">Register</Link>\n              </li>\n            )}\n            {ctx.isLoggedIn && (\n              <li>\n                <button className=\"logout-button-sidebar\" onClick={onLogout}>Logout</button>\n              </li>\n            )}\n          </ul>\n    </nav>\n  )\n}\n\nexport default SideDrawer;","import React from 'react'\n\nimport './Backdrop.css'\n\nconst Backdrop = props => (\n    <div className=\"backdrop\" onClick={props.click}></div>\n)\n\nexport default Backdrop;","import React, { useState } from 'react';\nimport Toolbar from './Toolbar';\nimport SideDrawer from '../SideDrawer/SideDrawer';\nimport Backdrop from '../Backdrop/Backdrop';\n\nimport './MainHeader.css';\n\nconst MainHeader = (props) => {\n\n  const [sideDrawerOpen, setDrawerOpen] = useState(false);\n\n  const drawerToggleClickHandler = () => {\n    setDrawerOpen(prevState => {\n      return !prevState.sideDrawerOpen;\n    })\n  }\n\n  const backdropClickHandler = () => {\n    setDrawerOpen(false);\n  }\n\n  let backdrop;\n\n  if (sideDrawerOpen) {\n    backdrop = <Backdrop click={backdropClickHandler} />\n  }\n\n  return (\n    <>\n      <Toolbar drawerClickHandler={drawerToggleClickHandler} />\n      <SideDrawer show={sideDrawerOpen} />\n      {backdrop}\n    </>\n  );\n};\n\nexport default MainHeader;\n","import React, {useContext} from 'react';\nimport AuthContext from '../contexts/user-context';\nimport { Redirect } from 'react-router';\n\nimport { Route } from 'react-router-dom';\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n\n    const authCtx = useContext(AuthContext);\n\n    return (\n        <Route {...rest} render={(props) => {\n            if(!authCtx.isLoading) {\n                if(authCtx.isLoggedIn) {\n                    return <Component />\n                } else {\n                    return <Redirect to=\"/login\" />\n                }\n            }\n        }} />\n    )\n}\n\nexport default PrivateRoute;","import React, {useContext} from 'react';\nimport AuthContext from '../contexts/user-context';\nimport { Redirect } from 'react-router';\n\nimport { Route } from 'react-router-dom';\n\nconst PublicRoute = ({component: Component, restricted, ...rest}) => {\n\n    const authCtx = useContext(AuthContext);\n\n    return (\n        <Route {...rest} render={(props) => {\n            if(!authCtx.isLoading) {\n                if(authCtx.isLoggedIn && restricted) {\n                    return <Redirect to=\"/\" />\n                } else {\n                    return <Component />\n                }\n            }\n        }} />\n    )\n}\n\nexport default PublicRoute;","import React from 'react';\n\nimport styles from './LandingPage.module.css';\n\nconst LandingPage = () => {\n    return (\n        <div className={styles.landingPage_container}>\n            <div className={styles.image_div}></div>\n            <div className={styles.welcome_info_div}>\n                <h1 className={styles.welcome_heading}>\n                    👋 Welcome to QuitWeed.org\n                </h1>\n                <p className={styles.welcome_message}>\n                    Our goal is to bring attention to the negative impacts\n                    of marijuana on health, mental clarity, appetite, motivation, and more.\n                    We are not here to make a moral statement on marijuana usage;\n                    plenty of people are able to responsibly enjoy the drug.\n                    For those of us who have become addicted, however,\n                    the drug quickly takes control of numerous aspects of life.\n                    <br /><br />\n                    QuitWeed.org is a tool that tracks your journey into sobriety,\n                    while monitoring health and emotional improvements along the way.\n                    <br /><br />\n                    To track these improvements, fill out the survey on the right and\n                    check-in to the website daily. In as little as three days\n                    you will see withdrawal symptoms recede,\n                    and soon you will have your old life back.</p>\n            </div>\n        </div>\n    )\n}\n\nexport default LandingPage;","import React from \"react\";\nimport { withRouter } from 'react-router';\n\nimport Card from \"../../UI/Card/Card\";\nimport Button from \"../../UI/Button/Button\";\nimport styles from './NewDailyLog.module.css';\n\nconst NewDailyLog = (props) => {\n\n    const newDailyLogHandler = () => {\n        return props.history.push(\"/dailyLogForm\");\n    }\n\n    const dateFormatter = (date) => {\n        date.setMinutes(date.getMinutes() - date.getTimezoneOffset());\n        return (<>\n            <h3>{date.toISOString().slice(0, 10)}</h3>\n            <h4>{date.toISOString().slice(11, 16)}</h4>\n        </>)\n    }\n\n    const DailyLogHistory = () => {\n        if (props.dailyLog && props.dailyLog.length > 0) {\n            return (\n                <div className={styles.dailyLogRow}>\n                    {props.dailyLog.map((log, index) => {\n                        return <CalendarDailyLog log={log} key={index} />\n                    })}\n                </div>\n            )\n        }\n    }\n\n    const CalendarDailyLog = ({ log }) => {\n        return (\n            <div className={styles.calendarDiv}>\n                <div style={{ flex: 1 }}></div>\n                <div className={styles.calendar}></div>\n                <div className={styles.dailyLogDate}>\n                    <div className={styles.logHistoryDate}>\n                        {dateFormatter(new Date(log.createdTime))}\n                    </div>\n                    <div className={styles.logHistoryStats}>\n                        <p>Cravings: {log.cravings}/10</p>\n                        <p>Motivation: {log.motivation}/10</p>\n                    </div>\n                </div>\n                <div style={{ flex: 1 }}></div>\n            </div>\n        )\n    }\n\n    return (\n        <>\n            {props.dailyLog && props.dailyLog.length === 0 &&\n                (<div>\n                    <div className={styles.newDailyLogFormHeadingDiv}>\n                        <h1 className={styles.newDailyLogFormHeading}>\n                            Daily Log\n                        </h1>\n                    </div>\n                    <Card className={styles.newDailyLogContainer}>\n                        <div className={styles.dailyLogImage}></div>\n                        <div className={styles.dailyLogButtonDiv}>\n                            <Button\n                                onClick={newDailyLogHandler}\n                                className={styles.dailyLogButton}>\n                                Add new log\n                            </Button>\n                        </div>\n                    </Card>\n                </div>)\n            }\n            {props.dailyLog && props.dailyLog.length > 0 &&\n                <div className={styles.addNewLogDiv}>\n                    <Button\n                        onClick={newDailyLogHandler}\n                        className={styles.addNewLogButton}>\n                        Add New Log\n                    </Button>\n                </div>\n            }\n            {props.dailyLog && props.dailyLog.length > 0 &&\n                <DailyLogHistory />\n            }\n        </>\n    )\n}\n\nexport default withRouter(NewDailyLog);","import React, { useContext } from 'react';\nimport ApiContext from '../../contexts/api-context';\nimport NewDailyLog from './NewDailyLog/NewDailyLog';\n\nimport Progress from '../UI/Progress/Progress';\n\nconst DailyLog = () => {\n\n    const apiCtx = useContext(ApiContext);\n    const dailyLog = apiCtx.dailyLog.dailyLog;\n\n    return (\n        <>\n            {apiCtx.isLoading && <Progress />}\n            {!apiCtx.isLoading &&\n                <NewDailyLog dailyLog={dailyLog} />\n            }\n        </>\n    );\n}\n\nexport default DailyLog;","import React, { useState, useContext } from \"react\";\nimport ApiContext from \"../../../contexts/api-context\";\nimport { withRouter } from 'react-router';\n\nimport Card from \"../../UI/Card/Card\";\nimport Input from \"../../UI/Input/Input\";\nimport Button from \"../../UI/Button/Button\";\nimport styles from './DailyLogForm.module.css';\n\nconst DailyLogForm = (props) => {\n\n    const apiCtx = useContext(ApiContext);\n\n    const [isLoading, setIsLoading] = useState(false);\n\n    const [cravings, setCravings] = useState(0);\n    const [irritability, setIrritability] = useState(0);\n    const [anxiety, setAnxiety] = useState(0);\n    const [insomnia, setInsomnia] = useState(0);\n    const [appetiteLoss, setAppetiteLoss] = useState(0);\n    const [moodSwings, setMoodSwings] = useState(0);\n    const [depression, setDepression] = useState(0);\n    const [coldSweats, setColdSweats] = useState(0);\n    const [motivation, setMotivation] = useState(0);\n    const [happiness, setHappiness] = useState(0);\n    const [confidence, setConfidence] = useState(0);\n\n    const cravingsChangeHandler = (e) => {\n        setCravings(e.target.value);\n    }\n    const irritabilityChangeHandler = (e) => {\n        setIrritability(e.target.value);\n    }\n    const anxietyChangeHandler = (e) => {\n        setAnxiety(e.target.value);\n    }\n    const insomniaChangeHandler = (e) => {\n        setInsomnia(e.target.value);\n    }\n    const appetiteLossChangeHandler = (e) => {\n        setAppetiteLoss(e.target.value);\n    }\n    const moodSwingsChangeHandler = (e) => {\n        setMoodSwings(e.target.value);\n    }\n    const depressionChangeHandler = (e) => {\n        setDepression(e.target.value);\n    }\n    const coldSweatsChangeHandler = (e) => {\n        setColdSweats(e.target.value);\n    }\n    const motivationChangeHandler = (e) => {\n        setMotivation(e.target.value);\n    }\n    const happinessChangeHandler = (e) => {\n        setHappiness(e.target.value);\n    }\n    const confidenceChangeHandler = (e) => {\n        setConfidence(e.target.value);\n    }\n\n    const redirectToDailyLog = () => {\n        return props.history.push(\"/dailyLog\");\n    }\n\n    const submitHandler = async (event) => {\n        event.preventDefault();\n        let body = {\n            cravings: cravings,\n            irritability: irritability,\n            anxiety: anxiety,\n            insomnia: insomnia,\n            appetiteLoss: appetiteLoss,\n            moodSwings: moodSwings,\n            depression: depression,\n            coldSweats: coldSweats,\n            motivation: motivation,\n            happiness: happiness,\n            confidence: confidence\n        }\n        setIsLoading(true);\n        const response = await apiCtx.updateDailyLog(body);\n        setIsLoading(false);\n\n        if (!response.ok) {\n            return;\n        }\n\n        redirectToDailyLog();\n\n    }\n\n    return (\n        <>\n            <div className={styles.dailyLogFormHeadingDiv}>\n                <h1 className={styles.dailyLogFormHeading}>\n                    Daily Log\n                </h1>\n                <p className={styles.dailyLogFormSubHeading}>\n                    Add daily logs to keep track\n                    of your cravings over time.\n                </p>\n            </div>\n\n            <Card className={styles.dailyLogForm}>\n                <div className={styles.formlegendDiv}>\n                    <span className={styles.formlegend}>\n                        * on a scale of 0 - 10, with 10 being the maximum</span>\n                </div>\n                <br />\n                <form onSubmit={submitHandler}>\n                    <Input\n                        id=\"cravings\"\n                        label=\"Cravings\"\n                        type=\"range\"\n                        min=\"0\"\n                        max=\"10\"\n                        value={cravings}\n                        displayMinMax={true}\n                        onChange={cravingsChangeHandler}\n                    />\n                    <Input\n                        id=\"irritability\"\n                        label=\"Irritability\"\n                        type=\"range\"\n                        min=\"0\"\n                        max=\"10\"\n                        value={irritability}\n                        displayMinMax={true}\n                        onChange={irritabilityChangeHandler}\n                    />\n                    <Input\n                        id=\"anxiety\"\n                        label=\"Anxiety\"\n                        type=\"range\"\n                        min=\"0\"\n                        max=\"10\"\n                        value={anxiety}\n                        displayMinMax={true}\n                        onChange={anxietyChangeHandler}\n                    />\n                    <Input\n                        id=\"insomnia\"\n                        label=\"Insomnia\"\n                        type=\"range\"\n                        min=\"0\"\n                        max=\"10\"\n                        value={insomnia}\n                        displayMinMax={true}\n                        onChange={insomniaChangeHandler}\n                    />\n                    <Input\n                        id=\"appetiteLoss\"\n                        label=\"Appetite Loss\"\n                        type=\"range\"\n                        min=\"0\"\n                        max=\"10\"\n                        value={appetiteLoss}\n                        displayMinMax={true}\n                        onChange={appetiteLossChangeHandler}\n                    />\n                    <Input\n                        id=\"moodSwings\"\n                        label=\"Mood Swings\"\n                        type=\"range\"\n                        min=\"0\"\n                        max=\"10\"\n                        value={moodSwings}\n                        displayMinMax={true}\n                        onChange={moodSwingsChangeHandler}\n                    />\n                    <Input\n                        id=\"depression\"\n                        label=\"Depression\"\n                        type=\"range\"\n                        min=\"0\"\n                        max=\"10\"\n                        value={depression}\n                        displayMinMax={true}\n                        onChange={depressionChangeHandler}\n                    />\n                    <Input\n                        id=\"coldSweats\"\n                        label=\"Cold Sweats\"\n                        type=\"range\"\n                        min=\"0\"\n                        max=\"10\"\n                        value={coldSweats}\n                        displayMinMax={true}\n                        onChange={coldSweatsChangeHandler}\n                    />\n                    <br /><hr /><br />\n                    <Input\n                        id=\"confidence\"\n                        label=\"Confidence\"\n                        type=\"range\"\n                        min=\"0\"\n                        max=\"10\"\n                        value={confidence}\n                        displayMinMax={true}\n                        onChange={confidenceChangeHandler}\n                    />\n                    <Input\n                        id=\"happiness\"\n                        label=\"Happiness\"\n                        type=\"range\"\n                        min=\"0\"\n                        max=\"10\"\n                        value={happiness}\n                        displayMinMax={true}\n                        onChange={happinessChangeHandler}\n                    />\n                    <Input\n                        id=\"motivation\"\n                        label=\"Motivation\"\n                        type=\"range\"\n                        min=\"0\"\n                        max=\"10\"\n                        value={motivation}\n                        displayMinMax={true}\n                        onChange={motivationChangeHandler}\n                    />\n                    <br />\n                    <div className={styles.actions}>\n                        <Button\n                            type=\"submit\"\n                            className={styles.loading}\n                            isLoading={isLoading}>\n                            Submit\n                        </Button>\n                    </div>\n                </form>\n            </Card>\n        </>\n    )\n}\n\nexport default withRouter(DailyLogForm);","import React, { useEffect, useReducer, useContext, useCallback } from \"react\";\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport NoDataToDisplay from 'highcharts/modules/no-data-to-display';\n\nimport styles from './DailyLogChart.module.css'\nimport ApiContext from \"../../contexts/api-context\";\nimport Progress from \"../UI/Progress/Progress\";\n\nconst DailyLogChart = () => {\n\n    const apiCtx = useContext(ApiContext);\n    const dailyLog = apiCtx.dailyLog.dailyLog;\n\n    const dailyLogReducer = (state, action) => {\n\n        let cravingsData = dailyLog.reduce((acc, val) => {\n            acc.data.push([new Date(val.createdTime).getTime(), val.cravings]);\n            return acc;\n        }, { name: 'Cravings', data: [] })\n\n        let irritabilityData = dailyLog.reduce((acc, val) => {\n            acc.data.push([new Date(val.createdTime).getTime(), val.irritability]);\n            return acc;\n        }, { name: 'Irritability', data: [] })\n\n        let anxietyData = dailyLog.reduce((acc, val) => {\n            acc.data.push([new Date(val.createdTime).getTime(), val.anxiety]);\n            return acc;\n        }, { name: 'Anxiety', data: [] })\n\n        let insomniaData = dailyLog.reduce((acc, val) => {\n            acc.data.push([new Date(val.createdTime).getTime(), val.insomnia]);\n            return acc;\n        }, { name: 'Insomnia', data: [] })\n\n        let appetiteLossData = dailyLog.reduce((acc, val) => {\n            acc.data.push([new Date(val.createdTime).getTime(), val.appetiteLoss]);\n            return acc;\n        }, { name: 'Appetite Loss', data: [] })\n\n        let moodSwingsData = dailyLog.reduce((acc, val) => {\n            acc.data.push([new Date(val.createdTime).getTime(), val.moodSwings]);\n            return acc;\n        }, { name: 'Mood swings', data: [] })\n\n        let depressionData = dailyLog.reduce((acc, val) => {\n            acc.data.push([new Date(val.createdTime).getTime(), val.depression]);\n            return acc;\n        }, { name: 'Depression', data: [] })\n\n        let coldSweatsData = dailyLog.reduce((acc, val) => {\n            acc.data.push([new Date(val.createdTime).getTime(), val.coldSweats]);\n            return acc;\n        }, { name: 'Cold Sweats', data: [] })\n\n        return [cravingsData, irritabilityData, anxietyData, insomniaData, appetiteLossData, moodSwingsData, depressionData, coldSweatsData];\n    }\n\n    const dailyLogAdditionalReducer = (state, action) => {\n\n        let motivationData = dailyLog.reduce((acc, val) => {\n            acc.data.push([new Date(val.createdTime).getTime(), val.motivation]);\n            return acc;\n        }, { name: 'Motivation', data: [] })\n\n        let happinessData = dailyLog.reduce((acc, val) => {\n            acc.data.push([new Date(val.createdTime).getTime(), val.happiness]);\n            return acc;\n        }, { name: 'Happiness', data: [] })\n\n        let confidenceData = dailyLog.reduce((acc, val) => {\n            acc.data.push([new Date(val.createdTime).getTime(), val.confidence]);\n            return acc;\n        }, { name: 'Confidence', data: [] })\n\n        return [motivationData, happinessData, confidenceData];\n\n    }\n\n    const [dailyLogData, dispatchDailyLogData] = useReducer(dailyLogReducer, []);\n    const [dailyLogAdditionalData, dispatchDailyLogAdditionalData] = useReducer(dailyLogAdditionalReducer, []);\n\n    const options = {\n        chart: {\n            type: 'spline'\n        },\n        title: {\n            text: `Daily Cravings - Stop them! ✋ `\n        },\n        subtitle: {\n            text: 'Add daily input to track your progress over time'\n        },\n        xAxis: {\n            type: 'datetime',\n            labels: {\n                formatter: function () {\n                    return Highcharts.dateFormat('%e %b \\'%y', this.value);\n                }\n            },\n            title: {\n                text: 'Date'\n            }\n        },\n        yAxis: {\n            title: {\n                text: 'Daily Cravings'\n            },\n            min: 0\n        },\n        tooltip: {\n            formatter: function() {\n                return tooltipFormatter(this);\n            }\n        },\n\n        plotOptions: {\n            series: {\n                marker: {\n                    enabled: true\n                }\n            }\n        },\n\n        colors: [\"#7cb5ec\", \"#434348\", \"#90ed7d\", \"#f7a35c\", \"#8085e9\", \"#f15c80\", \"#e4d354\", \"#2b908f\", \"#f45b5b\", \"#91e8e1\"],\n\n        // Define the data points. All series have a dummy year\n        // of 1970/71 in order to be compared on the same x axis. Note\n        // that in JavaScript, months start at 0 for January, 1 for February etc.\n        series: dailyLogData,\n\n        responsive: {\n            rules: [{\n                condition: {\n                    maxWidth: 500\n                },\n                chartOptions: {\n                    plotOptions: {\n                        series: {\n                            marker: {\n                                radius: 2.5\n                            }\n                        }\n                    }\n                }\n            }]\n        },\n\n        caption: {\n            text: `<b>What this graph indicates?</b><br />\n            It tracks your daily progress of quitting\n            smoking over time on attributes such as\n            like cravings, irritability, etc. <br />\n            The Y-axis indicates your \n            daily urge on a scale of 0 - 10, \n            with 10 being the maximum. The X-axis\n            denotes the timestamp.`\n        }\n    };\n\n    const options1 = {\n        chart: {\n            type: 'spline'\n        },\n        title: {\n            text: `Daily Motivation - Keep going! 💪 `\n        },\n        subtitle: {\n            text: 'Add daily input to track your progress over time'\n        },\n        xAxis: {\n            type: 'datetime',\n            labels: {\n                formatter: function () {\n                    return Highcharts.dateFormat('%e %b \\'%y', this.value);\n                }\n            },\n            title: {\n                text: 'Date'\n            }\n        },\n        yAxis: {\n            title: {\n                text: 'Daily Motivation'\n            },\n            min: 0\n        },\n        tooltip: {\n            formatter: function() {\n                return tooltipFormatter(this);\n            }\n        },\n\n        plotOptions: {\n            series: {\n                marker: {\n                    enabled: true\n                }\n            }\n        },\n\n        colors: [\"#f7a35c\", \"#8085e9\", \"#f15c80\", \"#e4d354\", \"#2b908f\", \"#f45b5b\", \"#91e8e1\"],\n\n        // Define the data points. All series have a dummy year\n        // of 1970/71 in order to be compared on the same x axis. Note\n        // that in JavaScript, months start at 0 for January, 1 for February etc.\n        series: dailyLogAdditionalData,\n\n        responsive: {\n            rules: [{\n                condition: {\n                    maxWidth: 500\n                },\n                chartOptions: {\n                    plotOptions: {\n                        series: {\n                            marker: {\n                                radius: 2.5\n                            }\n                        }\n                    }\n                }\n            }]\n        },\n\n        caption: {\n            text: `<b>What this graph indicates?</b><br />\n            It tracks your daily progress of quitting\n            smoking over time on attributes such as\n            like motivation, happiness, etc. <br />\n            The Y-axis indicates your \n            daily motivation on a scale of 0 - 10, \n            with 10 being the maximum. The X-axis\n            denotes the timestamp.`\n        }\n    };\n\n    const tooltipFormatter = (val) => {\n            let date = new Date(val.x);\n            date.setMinutes(date.getMinutes() - date.getTimezoneOffset());\n            date = date.toISOString();\n            date = date.substring(0, 10) + ' ' + date.substring(11, 19);\n\n            return `<b>${val.series.name} - ${val.y}</b><br />${date}`;\n    }\n\n    function changeHighChartsPosition() {\n        var el = document.getElementsByClassName(\"highcharts-container\")[0];\n        if (el) {\n            el.style.position = \"\";\n\n            Highcharts.charts.forEach(function (chart) {\n                if (chart)\n                    chart.reflow();\n            });\n        }\n    }\n\n    const customizeHighChart = useCallback(() => {\n        if (!apiCtx.isLoading && dailyLog && dailyLog.length === 0) {\n            NoDataToDisplay(Highcharts);\n            Highcharts.setOptions({\n                lang: {\n                    noData: 'Add DailyLog to see your progress here'\n                },\n                noData: {\n                    style: {\n                        fontWeight: 'bold',\n                        fontSize: '15px',\n                        color: 'red'\n                    }\n                },\n            });\n        }\n    }, [apiCtx.isLoading, dailyLog]);\n\n    customizeHighChart();\n    changeHighChartsPosition();\n\n    useEffect(() => {\n        customizeHighChart();\n        changeHighChartsPosition();\n        if (!apiCtx.isLoading && dailyLog && dailyLog.length > 0) {\n            dispatchDailyLogData();\n            dispatchDailyLogAdditionalData();\n        }\n    }, [dispatchDailyLogData, dispatchDailyLogAdditionalData, \n        dailyLog, apiCtx.isLoading, customizeHighChart\n    ])\n\n    return (\n        <>\n            {apiCtx.isLoading && <Progress />}\n            {!apiCtx.isLoading &&\n                <>\n                    <div className={styles.dailyLogChart_headingDiv}>\n                        <h1 className={styles.dailyLogChart_heading}>\n                            Your Daily Progress\n                        </h1>\n                        <p className={styles.dailyLogChart_subHeading}>\n                            Monitor your cravings and motivation regulary to develop good habits!\n                        </p>\n                    </div>\n                    <div className={styles.dailyLogChart_container}>\n                        {!apiCtx.isLoading && dailyLog &&\n                            <HighchartsReact\n                                containerProps={{\n                                    style: {\n                                        maxWidth: \"50rem\", margin: \"auto\"\n                                    }\n                                }}\n                                highcharts={Highcharts}\n                                options={options}\n                            />}\n                    </div>\n                    <div className={styles.dailyLogChart_container}>\n                        <HighchartsReact\n                            containerProps={{\n                                style: {\n                                    maxWidth: \"50rem\", margin: \"auto\"\n                                }\n                            }}\n                            highcharts={Highcharts}\n                            options={options1}\n                        />\n                    </div>\n                </>\n            }\n        </>\n    )\n}\n\nexport default DailyLogChart;","import React from 'react'\n\nimport Card from '../UI/Card/Card'\nimport styles from './Error.module.css'\n\nconst Error = props => {\n    return (\n        <Card className={styles.errorContainer}>\n            <h2 className={styles.centerAlign}>\n                {props.errorMsg}\n                {!props.errorMsg && <span>Something went wrong!</span>}\n            </h2>\n        </Card>\n    )\n\n}\n\nexport default Error;","import React from 'react';\nimport Home from './components/Home/Home';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport Login from './components/SignUp/Login/Login';\nimport Register from './components/SignUp/Register/Register';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport PrivateRoute from './routes/PrivateRoute';\nimport PublicRoute from './routes/PublicRoute';\n\nimport './App.css';\nimport LandingPage from './components/LandingPage/LandingPage';\nimport DailyLog from './components/DailyLog/DailyLog';\nimport DailyLogForm from './components/DailyLog/NewDailyLog/DailyLogForm';\nimport DailyLogChart from './components/Charts/DailyLogChart';\nimport ProfileForm from './components/Profile/ProfileForm';\nimport Error from './components/Error/Error';\n\nfunction App() {\n\n  return (\n    <React.Fragment>\n      <HashRouter>\n        <MainHeader />\n\n        <main>\n          <Switch>\n            <PublicRoute path=\"/login\" restricted={true} component={Login} />\n            <PublicRoute path=\"/register\" restricted={true} component={Register} />\n            <PublicRoute path=\"/\" exact restricted={false} component={LandingPage} />\n\n            <PrivateRoute path=\"/home\" exact component={Home} />\n            <PrivateRoute path=\"/dashboard\" exact component={Dashboard} />\n            <PrivateRoute path=\"/dailyLog\" exact component={DailyLog} />\n            <PrivateRoute path=\"/dailyLogForm\" exact component={DailyLogForm} />\n            <PrivateRoute path=\"/progress\" exact component={DailyLogChart} />\n            <PrivateRoute path=\"/profileForm\" exact component={ProfileForm} />\n\n            <Route path=\"*\">\n              <Error errorMsg=\"404: PAGE NOT FOUND\" />\n            </Route>\n          </Switch>\n        </main>\n\n      </HashRouter>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { AuthContextProvider } from './contexts/user-context';\nimport { ApiContextProvider } from './contexts/api-context';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <AuthContextProvider>\n    <ApiContextProvider>\n      <App />\n    </ApiContextProvider>\n  </AuthContextProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}