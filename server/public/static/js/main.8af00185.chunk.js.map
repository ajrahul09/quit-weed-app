{"version":3,"sources":["components/Dashboard/Dashboard.module.css","components/SignUp/Login/Login.module.css","components/SignUp/Register/Register.module.css","components/DailyLog/NewDailyLog/NewDailyLog.module.css","components/Profile/ProfileForm.module.css","components/DailyLog/NewDailyLog/DailyLogForm.module.css","components/LandingPage/LandingPage.module.css","components/Charts/DailyLogChart.module.css","components/UI/Input/Input.module.css","components/UI/Button/Button.module.css","components/UI/Card/Card.module.css","components/UI/Progress/Progress.module.css","components/UI/Input/Input.js","components/UI/Button/Button.js","contexts/user-context.js","contexts/api-context.js","components/UI/Card/Card.js","components/Profile/ProfileForm.js","components/UI/Progress/Progress.js","components/Home/Home.js","components/Dashboard/Dashboard.js","components/SignUp/Login/Login.js","components/SignUp/Register/Register.js","components/SideDrawer/DrawerToggleButton.js","components/MainHeader/Toolbar.js","components/SideDrawer/SideDrawer.js","components/Backdrop/Backdrop.js","components/MainHeader/MainHeader.js","routes/PrivateRoute.js","routes/PublicRoute.js","components/LandingPage/LandingPage.js","components/DailyLog/NewDailyLog/NewDailyLog.js","components/DailyLog/DailyLog.js","components/DailyLog/NewDailyLog/DailyLogForm.js","components/Charts/DailyLogChart.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Input","props","className","classes","control","isValid","invalid","htmlFor","id","label","displayMinMax","minMax","min","type","value","onChange","onBlur","max","Button","loading","disabled","children","isLoading","button","onClick","API_SERVER_BASE_URL","process","AuthContext","React","createContext","user","isLoggedIn","onLogout","onLogin","email","password","onRegister","name","AuthContextProvider","useState","setIsLoggedIn","setIsLoading","setUser","useEffect","localStorage","getItem","JSON","parse","loginHandler","a","requestOptions","mode","method","headers","body","stringify","fetch","response","json","data","ok","Error","message","setItem","registerationHandler","Provider","removeItem","ApiContext","profile","dailyLog","images","saveProfile","params","updateProfile","updateDailyLog","uploadImage","ApiContextProvider","setProfile","setDailyLog","setImages","authCtx","useContext","fetchProfileHandler","useCallback","token","userId","profileData","quittingReason","smokingTimesPerDay","smokingTimesPerWeek","smokingCostPerWeek","soberDate","fetchDailyLog","quittingReasonPhoto","cravings","irritability","anxiety","insomnia","appetiteLoss","moodSwings","depression","coldSweats","motivation","happiness","confidence","imageName","imageData","prevValue","fetchProfile","fetchLog","Promise","all","then","values","catch","error","Card","card","ProfileForm","apiCtx","setQuittingReason","setSmokingTimesPerDay","setSmokingTimesPerWeek","setSmokingCostPerWeek","setSoberDate","isError","setIsError","setMessage","imageUploaded","submitHandler","event","preventDefault","dateFormatter","date","setMinutes","getMinutes","getTimezoneOffset","toISOString","slice","Date","msgClass","styles","successMsg","failureMsg","profileFormHeadingDiv","profileFormHeading","messageDiv","profileForm","onSubmit","target","actions","btn","Progress","loader","Home","to","Dashboard","elapsedSoberDate","setElapsedSoberDate","moneySavedTillNow","setMoneySavedTillNow","moneySavedPerYear","setMoneySavedPerYear","timeElapsedSoberDate","setInterval","timeDiff","now","seconds","Math","floor","secondsAsString","minutes","minutesAsString","hours","totalHoursAsString","moneySaved","toFixed","Object","keys","length","elapsedSoberTimeContainer","smokeFreeHeading","elapsedSoberTime","moneySavedContainer","moneySavedLabel","quittingReasonContainer","quittingReasonLabel","quittingReasonQuote","emailReducer","state","action","val","includes","passReducer","withRouter","formIsValid","setFormIsValid","useReducer","emailEntered","emailDispatch","passEntered","passDispatch","emailIsValid","passIsValid","shakeonError","setShakeonError","formValidityTimout","setTimeout","clearTimeout","handleLoginError","shake","history","push","loginHeadingDiv","loginHeading","login","redirectToRegisterDiv","switchToReg","nameEntered","setNameEntered","handleRegistrationError","regHeadingDiv","regHeading","register","redirectToLoginDiv","switchToLogin","drawerToggleButton","click","Navigation","ctx","updatedProfile","hasOwnProperty","drawerClickHandler","SideDrawer","drawerClasses","show","Backdrop","MainHeader","backdrop","sideDrawerOpen","setDrawerOpen","prevState","PrivateRoute","Component","component","rest","render","PublicRoute","restricted","LandingPage","landingPage_container","image_div","welcome_info_div","welcome_heading","welcome_message","newDailyLogHandler","DailyLogHistory","map","log","index","CalendarDailyLog","calendarDiv","style","flex","calendar","logHistoryDate","createdTime","logHistoryStats","newDailyLogFormHeadingDiv","newDailyLogFormHeading","newDailyLogContainer","dailyLogImage","dailyLogButtonDiv","dailyLogButton","addNewLogDiv","addNewLogButton","DailyLog","setCravings","setIrritability","setAnxiety","setInsomnia","setAppetiteLoss","setMoodSwings","setDepression","setColdSweats","setMotivation","setHappiness","setConfidence","dailyLogFormHeadingDiv","dailyLogFormHeading","dailyLogFormSubHeading","dailyLogForm","formlegend","e","DailyLogChart","reduce","acc","getTime","dailyLogData","dispatchDailyLogData","dailyLogAdditionalData","dispatchDailyLogAdditionalData","options","chart","title","text","subtitle","xAxis","labels","formatter","Highcharts","dateFormat","this","yAxis","tooltip","tooltipFormatter","plotOptions","series","marker","enabled","colors","responsive","rules","condition","maxWidth","chartOptions","radius","caption","options1","x","substring","y","changeHighChartsPosition","el","document","getElementsByClassName","position","charts","forEach","reflow","customizeHighChart","NoDataToDisplay","setOptions","lang","noData","fontWeight","fontSize","color","dailyLogChart_headingDiv","dailyLogChart_heading","dailyLogChart_subHeading","dailyLogChart_container","containerProps","margin","highcharts","App","Fragment","path","Login","Register","exact","DailyLogForm","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.8af00185.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"elapsedSoberTimeContainer\":\"Dashboard_elapsedSoberTimeContainer__2B-Fo\",\"elapsedSoberTime\":\"Dashboard_elapsedSoberTime__2Gmu1\",\"smokeFreeHeading\":\"Dashboard_smokeFreeHeading__2d5M5\",\"moneySavedContainer\":\"Dashboard_moneySavedContainer__2GIAb\",\"moneySaved\":\"Dashboard_moneySaved__N3y6u\",\"moneySavedLabel\":\"Dashboard_moneySavedLabel__3AaAl\",\"quittingReasonContainer\":\"Dashboard_quittingReasonContainer__dZJLS\",\"quittingReasonLabel\":\"Dashboard_quittingReasonLabel__39dd0\",\"quittingReason\":\"Dashboard_quittingReason__3TF_I\",\"quittingReasonQuote\":\"Dashboard_quittingReasonQuote__24vrf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__30W3M\",\"loginHeadingDiv\":\"Login_loginHeadingDiv__3JX7m\",\"loginHeading\":\"Login_loginHeading__3Psmo\",\"actions\":\"Login_actions__3b0PT\",\"switchToReg\":\"Login_switchToReg__1p3D8\",\"redirectToRegisterDiv\":\"Login_redirectToRegisterDiv__3IKeP\",\"messageDiv\":\"Login_messageDiv__39Yzc\",\"message\":\"Login_message__32EQb\",\"failureMsg\":\"Login_failureMsg__3jG2r\",\"successMsg\":\"Login_successMsg__2-qMo\",\"shake\":\"Login_shake__2TCaY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"register\":\"Register_register__b4Eyv\",\"regHeadingDiv\":\"Register_regHeadingDiv__Yfn0A\",\"regHeading\":\"Register_regHeading__Gr-EI\",\"actions\":\"Register_actions__3fLPi\",\"switchToLogin\":\"Register_switchToLogin__3tVnK\",\"redirectToLoginDiv\":\"Register_redirectToLoginDiv__3Ojdx\",\"messageDiv\":\"Register_messageDiv__2JxFk\",\"message\":\"Register_message___N1zH\",\"failureMsg\":\"Register_failureMsg__3DLTA\",\"successMsg\":\"Register_successMsg__QC6DK\",\"shake\":\"Register_shake__2Qeqm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newDailyLogContainer\":\"NewDailyLog_newDailyLogContainer__1IPMc\",\"dailyLogImage\":\"NewDailyLog_dailyLogImage__1hOVo\",\"dailyLogButton\":\"NewDailyLog_dailyLogButton__3X7qW\",\"dailyLogButtonDiv\":\"NewDailyLog_dailyLogButtonDiv__2efqz\",\"addNewLogDiv\":\"NewDailyLog_addNewLogDiv__3R0GS\",\"addNewLogButton\":\"NewDailyLog_addNewLogButton__3Om6I\",\"newDailyLogFormHeadingDiv\":\"NewDailyLog_newDailyLogFormHeadingDiv__1U1wn\",\"newDailyLogFormHeading\":\"NewDailyLog_newDailyLogFormHeading__mBLNW\",\"calendarDiv\":\"NewDailyLog_calendarDiv__3Zork\",\"calendar\":\"NewDailyLog_calendar__3bF5r\",\"logHistoryDate\":\"NewDailyLog_logHistoryDate__IiCj0\",\"logHistoryStats\":\"NewDailyLog_logHistoryStats__1ESdC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileForm\":\"ProfileForm_profileForm__3rHHV\",\"actions\":\"ProfileForm_actions__3UC0o\",\"profileFormHeadingDiv\":\"ProfileForm_profileFormHeadingDiv__38CkX\",\"profileFormHeading\":\"ProfileForm_profileFormHeading__2O9l7\",\"imageUploadedDivContainer\":\"ProfileForm_imageUploadedDivContainer__KM8FA\",\"imageUploadedThumbnail\":\"ProfileForm_imageUploadedThumbnail__1nirA\",\"imageUploadedDiv\":\"ProfileForm_imageUploadedDiv__3zOB2\",\"imageUploadedMsg\":\"ProfileForm_imageUploadedMsg__10NG1\",\"messageDiv\":\"ProfileForm_messageDiv__2CfiW\",\"message\":\"ProfileForm_message__wNqdk\",\"failureMsg\":\"ProfileForm_failureMsg__2aY-K\",\"successMsg\":\"ProfileForm_successMsg__2Q66d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dailyLogForm\":\"DailyLogForm_dailyLogForm__sX8M4\",\"actions\":\"DailyLogForm_actions__1d6Vo\",\"dailyLogFormHeadingDiv\":\"DailyLogForm_dailyLogFormHeadingDiv__2FOCZ\",\"dailyLogFormHeading\":\"DailyLogForm_dailyLogFormHeading__2zaEM\",\"dailyLogFormSubHeading\":\"DailyLogForm_dailyLogFormSubHeading__4bdL2\",\"formlegend\":\"DailyLogForm_formlegend__W4-Mu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"landingPage_container\":\"LandingPage_landingPage_container__UYN6R\",\"image_div\":\"LandingPage_image_div__b3YiW\",\"welcome_info_div\":\"LandingPage_welcome_info_div__2UUO_\",\"welcome_heading\":\"LandingPage_welcome_heading__2zpfc\",\"welcome_message\":\"LandingPage_welcome_message__36Fa9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dailyLogChart_container\":\"DailyLogChart_dailyLogChart_container__2MOff\",\"dailyLogChart_headingDiv\":\"DailyLogChart_dailyLogChart_headingDiv__23-cZ\",\"dailyLogChart_heading\":\"DailyLogChart_dailyLogChart_heading__1EaeR\",\"dailyLogChart_subHeading\":\"DailyLogChart_dailyLogChart_subHeading__2zGaD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"Input_control__7JYPz\",\"invalid\":\"Input_invalid__1XscM\",\"minMax\":\"Input_minMax__V_0B-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2lgkF\",\"loading\":\"Button_loading__3pbz5\",\"dots\":\"Button_dots__vCb-X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1te4P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Progress_loader__2PEcj\",\"load8\":\"Progress_load8__3Vidi\",\"loader--hide\":\"Progress_loader--hide__8cOup\"};","import React from 'react'\n\nimport classes from './Input.module.css'\n\nconst Input = (props) => {\n    return (\n        <div\n            className={`${classes.control} ${props.isValid === false ? classes.invalid : ''\n                }`}\n        >\n            <label htmlFor={props.id}>{props.label}</label>\n            {props.displayMinMax && <span className={classes.minMax}>{props.min}</span>}\n            <input\n                type={props.type}\n                id={props.id}\n                value={props.value}\n                onChange={props.onChange}\n                onBlur={props.onBlur}\n                max={props.max}\n                min={props.min}\n            />\n            {props.displayMinMax && <span className={classes.minMax}>{props.max}</span>}\n        </div>\n    )\n}\n\nexport default Input","import React from 'react';\n\nimport classes from './Button.module.css';\n\nconst Button = (props) => {\n\n  let loading = '';\n  let disabled = props.disabled;\n  let children = props.children;\n  \n  if(props.isLoading) {\n    loading = classes.loading\n    disabled = true;\n    children = '';\n  }\n\n  return (\n    <button\n      type={props.type || 'button'}\n      className={`${classes.button} ${props.className} ${loading}`}\n      onClick={props.onClick}\n      disabled={disabled}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useState, useEffect } from 'react';\n\nconst API_SERVER_BASE_URL = process.env.REACT_APP_API_SERVER_BASE_URL;\n\nconst AuthContext = React.createContext({\n    isLoading: false,\n    user: {},\n    isLoggedIn: false,\n    onLogout: () => { },\n    onLogin: (email, password) => { },\n    onRegister: (name, email, password) => { },\n})\n\nexport const AuthContextProvider = (props) => {\n\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [isLoading, setIsLoading] = useState(true);\n    const [user, setUser] = useState({});\n\n    useEffect(() => {\n        if (localStorage.getItem('user')) {\n            setUser(JSON.parse(localStorage.getItem('user')));\n            setIsLoggedIn(true);\n        }\n        setIsLoading(false);\n    }, [])\n\n    const loginHandler = async (email, password) => {\n\n        try {\n            const requestOptions = {\n                mode: 'cors',\n                method: 'POST',\n                headers: {\n                    'Accept': '*/*',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ \"email\": email, \"password\": password })\n            };\n\n            const response =\n                await fetch(`${API_SERVER_BASE_URL}/api/user/login`,\n                    requestOptions);\n\n            const data = await response.json();\n\n            if (!response.ok) {\n                throw new Error(data.message);\n            }\n\n            localStorage.setItem('user', JSON.stringify(data));\n            setUser(data);\n            setIsLoggedIn(true);\n\n            return { message: \"Login successful\", ok: true };\n        } catch (err) {\n            return { message: err.message, ok: false };\n        }\n    };\n\n    const logoutHandler = () => {\n        localStorage.removeItem('user');\n        setIsLoggedIn(false);\n        setIsLoading(false);\n    };\n\n    const registerationHandler = async (name, email, password) => {\n\n        try {\n            const requestOptions = {\n                mode: 'cors',\n                method: 'POST',\n                headers: {\n                    'Accept': '*/*',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    \"name\": name,\n                    \"email\": email,\n                    \"password\": password\n                })\n            };\n\n            const response =\n                await fetch(`${API_SERVER_BASE_URL}/api/user/register`,\n                    requestOptions);\n\n            const data = await response.json();\n\n            if (!response.ok) {\n                throw new Error(data.message);\n            }\n\n            return {\n                message: `Registration successful.\n                An email has been sent to your inbox. \n            Please verify your email to proceed.`, ok: true\n            };\n        } catch (err) {\n            return { message: err.message, ok: false };\n        }\n    }\n\n    return (\n        <AuthContext.Provider value={{\n            isLoading: isLoading,\n            user: user,\n            isLoggedIn: isLoggedIn,\n            onLogout: logoutHandler,\n            onLogin: loginHandler,\n            onRegister: registerationHandler\n        }}\n        >\n            {props.children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthContext;","import React, { useState, useEffect, useContext, useCallback } from 'react';\nimport AuthContext from './user-context';\n\nconst API_SERVER_BASE_URL = process.env.REACT_APP_API_SERVER_BASE_URL;\n\nconst ApiContext = React.createContext({\n    profile: {},\n    dailyLog: {},\n    images: [],\n    isLoading: false,\n    saveProfile: params => { },\n    updateProfile: params => { },\n    updateDailyLog: params => { },\n    uploadImage: params => { }\n})\n\nexport const ApiContextProvider = (props) => {\n\n    const [profile, setProfile] = useState({});\n    const [dailyLog, setDailyLog] = useState({});\n    const [isLoading, setIsLoading] = useState(true);\n    const [images, setImages] = useState([]);\n\n    const authCtx = useContext(AuthContext);\n    const user = authCtx.user;\n\n    // FETCH PROFILE\n    const fetchProfileHandler = useCallback(async () => {\n\n        try {\n            const requestOptions = {\n                mode: 'cors',\n                method: 'GET',\n                headers: {\n                    'auth-token': user.token,\n                    'Accept': '*/*',\n                    'Content-Type': 'application/json'\n                }\n            };\n\n            const response =\n                await fetch(`${API_SERVER_BASE_URL}/api/profiles/${user.userId}`,\n                    requestOptions);\n\n            if (!response.ok) {\n                throw new Error('Something went wrong!');\n            }\n\n            const profileData = await response.json();\n            setProfile(profileData);\n\n            return { message: \"Profile fetched successfully\", ok: true };\n\n        } catch (err) {\n            return { message: err.message, ok: false };\n        }\n\n    }, [user.token, user.userId]);\n\n\n    // SAVE PROFILE\n    const saveProfile = async (params) => {\n        let body = {\n            userId: user.userId,\n            quittingReason: params.quittingReason,\n            smokingTimesPerDay: params.smokingTimesPerDay,\n            smokingTimesPerWeek: params.smokingTimesPerWeek,\n            smokingCostPerWeek: params.smokingCostPerWeek,\n            soberDate: params.soberDate\n        }\n\n        try {\n            const requestOptions = {\n                mode: 'cors',\n                method: 'POST',\n                headers: {\n                    'Accept': '*/*',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(body)\n            };\n\n            const response =\n                await fetch(`${API_SERVER_BASE_URL}/api/profiles`,\n                    requestOptions);\n\n            const data = await response.json();\n\n            if (!response.ok) {\n                throw new Error(data.message);\n            }\n\n            setProfile(data);\n\n            return fetchDailyLog();\n\n        } catch (err) {\n            return { message: err.message, ok: false };\n        }\n    }\n\n\n    // FETCH DAILYLOG\n    const fetchDailyLog = useCallback(async () => {\n\n        try {\n            const requestOptions = {\n                mode: 'cors',\n                method: 'GET',\n                headers: {\n                    'auth-token': user.token,\n                    'Accept': '*/*',\n                    'Content-Type': 'application/json'\n                }\n            };\n\n            const response =\n                await fetch(`${API_SERVER_BASE_URL}/api/dailyLog/${user.userId}`,\n                    requestOptions);\n\n            const data = await response.json();\n\n            if (!response.ok) {\n                throw new Error(data.message);\n            }\n\n            setDailyLog(data);\n\n            return { message: \"Daily Log fetched successfully\", ok: true };\n\n        } catch (err) {\n            return { message: err.message, ok: false };\n        }\n\n    }, [user.token, user.userId]);\n\n\n    // UPDATE PROFILE\n    const updateProfile = async (params) => {\n        let body = {\n            userId: user.userId,\n            quittingReason: params.quittingReason,\n            quittingReasonPhoto: params.quittingReasonPhoto,\n            smokingTimesPerDay: params.smokingTimesPerDay,\n            smokingTimesPerWeek: params.smokingTimesPerWeek,\n            smokingCostPerWeek: params.smokingCostPerWeek,\n            soberDate: params.soberDate\n        }\n\n        try {\n            const requestOptions = {\n                mode: 'cors',\n                method: 'PATCH',\n                headers: {\n                    'Accept': '*/*',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(body)\n            };\n\n            const response =\n                await fetch(`${API_SERVER_BASE_URL}/api/profiles/${user.userId}`,\n                    requestOptions);\n\n            const data = await response.json();\n\n            if (!response.ok) {\n                throw new Error(data.message);\n            }\n\n            setProfile(data);\n\n            return { message: \"Profile updated successfully\", ok: true }\n\n        } catch (err) {\n            return { message: err.message, ok: false };\n        }\n    }\n\n\n    // UPDATE DAILY LOG\n    const updateDailyLog = async (params) => {\n        let body = {\n            cravings: params.cravings,\n            irritability: params.irritability,\n            anxiety: params.anxiety,\n            insomnia: params.insomnia,\n            appetiteLoss: params.appetiteLoss,\n            moodSwings: params.moodSwings,\n            depression: params.depression,\n            coldSweats: params.coldSweats,\n            motivation: params.motivation,\n            happiness: params.happiness,\n            confidence: params.confidence\n        }\n\n        try {\n            const requestOptions = {\n                mode: 'cors',\n                method: 'PATCH',\n                headers: {\n                    'Accept': '*/*',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(body)\n            };\n\n            const response =\n                await fetch(`${API_SERVER_BASE_URL}/api/dailyLog/${user.userId}`,\n                    requestOptions);\n\n            const data = await response.json();\n\n            if (!response.ok) {\n                throw new Error(data.message);\n            }\n\n            setDailyLog(data);\n\n            return { message: \"Daily Log updated successfully\", ok: true }\n\n        } catch (err) {\n            return { message: err.message, ok: false };\n        }\n    }\n\n    // UPLOAD IMAGE\n    const uploadImage = async (params) => {\n        let body = {\n            userId: user.userId,\n            imageName: params.imageName,\n            imageData: params.imageData,\n            type: params.type\n        }\n\n        try {\n            const requestOptions = {\n                mode: 'cors',\n                method: 'POST',\n                headers: {\n                    'Accept': '*/*',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(body)\n            };\n\n            const response =\n                await fetch(`${API_SERVER_BASE_URL}/api/uploadImage`,\n                    requestOptions);\n\n            const data = await response.json();\n\n            if (!response.ok) {\n                throw new Error(data.message);\n            }\n\n            setImages(prevValue => {\n                return [...prevValue, data];\n            });\n\n            return data;\n\n        } catch (err) {\n            return { message: err.message, ok: false };\n        }\n    }\n\n    // FETCH IMAGE\n    // const fetchImage =\n        useCallback(async (params) => {\n\n            try {\n                const requestOptions = {\n                    mode: 'cors',\n                    method: 'GET',\n                    headers: {\n                        'Accept': '*/*',\n                        'Content-Type': 'application/json'\n                    }\n                };\n\n                const response =\n                    await fetch(`${API_SERVER_BASE_URL}/api/uploadImage/` +\n                        user.userId + '/' +\n                        'quitting-reason',\n                        requestOptions);\n\n                const data = await response.json();\n\n                if (!response.ok) {\n                    throw new Error(data.message);\n                }\n\n                setImages(prevValue => {\n                    return [...prevValue, data];\n                });\n\n                return data;\n\n            } catch (err) {\n                return { message: err.message, ok: false };\n            }\n\n        }, [user.userId]);\n\n    useEffect(() => {\n        if (authCtx.isLoggedIn) {\n            setIsLoading(true);\n\n            const fetchProfile = fetchProfileHandler();\n            const fetchLog = fetchDailyLog();\n            // const fetchImg = fetchImage();\n\n            Promise.all([fetchProfile, fetchLog])\n                .then(values => {\n                    setIsLoading(false);\n                })\n                .catch(error => {\n                    setIsLoading(false);\n                });\n        }\n    }, [authCtx.isLoggedIn, fetchDailyLog, fetchProfileHandler])\n\n    return (\n        <ApiContext.Provider value={{\n            profile: profile,\n            dailyLog: dailyLog,\n            images: images,\n            isLoading: isLoading,\n            saveProfile: saveProfile,\n            updateProfile: updateProfile,\n            updateDailyLog: updateDailyLog,\n            uploadImage: uploadImage\n        }}\n        >\n            {props.children}\n        </ApiContext.Provider>\n    )\n}\n\nexport default ApiContext;","import React from 'react';\n\nimport classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <div className={`${classes.card} ${props.className}`}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState, useContext, useEffect } from 'react';\n\nimport Input from '../UI/Input/Input';\nimport Button from '../UI/Button/Button';\nimport ApiContext from '../../contexts/api-context';\n\nimport styles from './ProfileForm.module.css'\nimport Card from '../UI/Card/Card';\n\nconst ProfileForm = (props) => {\n\n    const apiCtx = useContext(ApiContext);\n    const profile = apiCtx.profile;\n\n    const [quittingReason, setQuittingReason] = useState('');\n    const [smokingTimesPerDay, setSmokingTimesPerDay] = useState(0);\n    const [smokingTimesPerWeek, setSmokingTimesPerWeek] = useState(0);\n    const [smokingCostPerWeek, setSmokingCostPerWeek] = useState(0);\n    const [soberDate, setSoberDate] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [isError, setIsError] = useState(false);\n    const [message, setMessage] = useState('');\n\n    const [quittingReasonPhoto, setQuittingReasonPhoto] = useState('');\n    const [imageUploaded, setImageUploaded] = useState(0);\n    const [showThumbnail, setShowThumbnail] = useState(false);\n\n    const submitHandler = async (event) => {\n        event.preventDefault();\n        setMessage('');\n\n        let params = {\n            quittingReason: quittingReason,\n            quittingReasonPhoto: quittingReasonPhoto,\n            smokingTimesPerDay: smokingTimesPerDay,\n            smokingTimesPerWeek: smokingTimesPerWeek,\n            smokingCostPerWeek: smokingCostPerWeek,\n            soberDate: soberDate\n        }\n\n        setIsLoading(true);\n        let response = {};\n        if (profile.soberDate && profile.soberDate && '' !== profile.soberDate) {\n            response = await apiCtx.updateProfile(params);\n        } else {\n            response = await apiCtx.saveProfile(params);\n        }\n        setIsLoading(false);\n\n        if (!response.ok) {\n            setIsError(true);\n        }\n\n        setMessage(response.message);\n\n    }\n\n    const quittingReasonHandler = (event) => {\n        setQuittingReason(event.target.value);\n    };\n\n    const smokingTimesPerDayHandler = (event) => {\n        setSmokingTimesPerDay(event.target.value);\n    };\n\n    const smokingTimesPerWeekHandler = (event) => {\n        setSmokingTimesPerWeek(event.target.value);\n    };\n\n    const smokingCostPerWeekHandler = (event) => {\n        setSmokingCostPerWeek(event.target.value);\n    };\n\n    const soberDateHandler = (event) => {\n        setSoberDate(event.target.value);\n    };\n\n    const dateFormatter = (date) => {\n        date.setMinutes(date.getMinutes() - date.getTimezoneOffset());\n        return date.toISOString().slice(0, 16);\n    }\n\n    // Commenting below code for uploading photo and converting to base64\n\n    // const toBase64 = file => new Promise((resolve, reject) => {\n    //     const reader = new FileReader();\n    //     reader.readAsDataURL(file);\n    //     reader.onload = () => resolve(reader.result);\n    //     reader.onerror = error => reject(error);\n    // });\n\n    // const onImageChange = async event => {\n    //     if (event.target.files && event.target.files[0]) {\n    //         setShowThumbnail(true);\n\n    //         let img = event.target.files[0];\n\n    //         let base64Img = await toBase64(img)\n\n    //         setQuittingReasonPhoto(base64Img);\n\n    //         let imageObj = {\n    //             imageName: img.name,\n    //             imageData: base64Img,\n    //             type: 'quitting-reason'\n    //         }\n\n    //         setImageUploaded(1);\n    //         await apiCtx.uploadImage(imageObj);\n    //         setImageUploaded(2);\n\n    //     }\n    // };\n\n    useEffect(() => {\n        if (profile) {\n            setQuittingReason(profile.quittingReason);\n            setSmokingTimesPerDay(profile.smokingTimesPerDay);\n            setSmokingTimesPerWeek(profile.smokingTimesPerWeek);\n            setSmokingCostPerWeek(profile.smokingCostPerWeek);\n            setSoberDate(profile.soberDate ? dateFormatter(new Date(profile.soberDate)) : '');\n        }\n        return () => {\n            setQuittingReason('')\n            setSmokingTimesPerDay(0);\n            setSmokingTimesPerWeek(0);\n            setSmokingCostPerWeek(0);\n            setSoberDate('');\n        }\n    }, [profile])\n\n    let msgClass = styles.successMsg;\n    if (isError) {\n        msgClass = styles.failureMsg;\n    }\n\n    return (\n        <>\n            <div className={styles.profileFormHeadingDiv}>\n                <h1 className={styles.profileFormHeading}>\n                    Update Profile\n                </h1>\n            </div>\n\n            <div className={`${msgClass} ${styles.messageDiv}`}>\n                <p className={styles.message}>{message}</p>\n            </div>\n\n            <Card className={styles.profileForm}>\n                <div>\n                    <form onSubmit={submitHandler}>\n                        <Input\n                            id=\"quittingReason\"\n                            label=\"Who and what are you quitting for?\"\n                            type=\"text\"\n                            value={quittingReason || ''}\n                            onChange={quittingReasonHandler}\n                        />\n                        {/* Commenting below code for uploading quitting reason photo */}    \n                        {/* <Input\n                            id=\"quittingReasonPhoto\"\n                            label=\"Upload an image of the person or the thing you're quitting for?\"\n                            type=\"file\"\n                            onChange={onImageChange}\n                        />\n                        <div className={styles.imageUploadedDivContainer}>\n                            {showThumbnail &&\n                                <>\n                                    <div className={styles.imageUploadedDiv}>\n                                        <img alt=\"quitting-smoking\"\n                                            className={styles.imageUploadedThumbnail}\n                                            src={quittingReasonPhoto} />\n                                    </div>\n                                    <div className={styles.imageUploadedMsg}>\n                                        {imageUploaded === 1 && <span>Image Uploading...</span>}\n                                        {imageUploaded === 2 && <span>Image Uploaded</span>}\n                                    </div>\n                                </>\n                            }\n                        </div> */}\n                        <Input\n                            id=\"smokingTimesPerDay\"\n                            label=\"Smoke sesh's per day\"\n                            type=\"number\"\n                            value={smokingTimesPerDay || 0}\n                            onChange={smokingTimesPerDayHandler}\n                        />\n                        <Input\n                            id=\"smokingTimesPerWeek\"\n                            label=\"Smoke sesh's per week\"\n                            type=\"number\"\n                            value={smokingTimesPerWeek || 0}\n                            onChange={smokingTimesPerWeekHandler}\n                        />\n                        <Input\n                            id=\"smokingCostPerWeek\"\n                            label=\"How much did you spend per week on weed? ($)\"\n                            type=\"number\"\n                            value={smokingCostPerWeek || 0}\n                            onChange={smokingCostPerWeekHandler}\n                        />\n                        <Input\n                            id=\"soberDate\"\n                            label=\"When was the last time you smoked?\"\n                            type=\"datetime-local\"\n                            max={dateFormatter(new Date())}\n                            value={soberDate || ''}\n                            onChange={soberDateHandler}\n                        />\n                        <br />\n                        <div className={styles.actions}>\n                            <Button\n                                type=\"submit\"\n                                className={styles.btn}\n                                isLoading={isLoading}\n                                disabled={imageUploaded === 1 ? true : false}>\n                                Submit\n                            </Button>\n                        </div>\n                    </form>\n                </div>\n            </Card>\n        </>\n    )\n}\n\nexport default ProfileForm;","import React from 'react'\nimport styles from './Progress.module.css'\n\nconst Progress = () => {\n    return (\n        <div className={styles.loader}></div>\n    )\n}\n\nexport default Progress;","import React, { useContext } from 'react';\nimport ProfileForm from '../Profile/ProfileForm';\nimport ApiContext from '../../contexts/api-context';\nimport { Redirect } from 'react-router';\n\nimport Progress from '../UI/Progress/Progress'\n\nconst Home = () => {\n  \n  const apiCtx = useContext(ApiContext);\n\n  return (\n    <>\n      {apiCtx.isLoading && <Progress />}\n      {!apiCtx.isLoading && !apiCtx.profile.userId && <ProfileForm />}\n      {!apiCtx.isLoading && apiCtx.profile.userId && <Redirect to=\"/dashboard\" />}\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect, useCallback, useContext } from 'react'\nimport ApiContext from '../../contexts/api-context';\nimport styles from './Dashboard.module.css';\n\nimport Progress from '../UI/Progress/Progress';\n\n\nconst Dashboard = (props) => {\n\n    const apiCtx = useContext(ApiContext);\n    const profile = apiCtx.profile;\n\n    const {\n        quittingReason,\n        // smokingTimesPerDay,\n        // smokingTimesPerWeek,\n        smokingCostPerWeek,\n        soberDate\n    } = profile;\n\n    const [elapsedSoberDate, setElapsedSoberDate] = useState(\"\");\n    const [moneySavedTillNow, setMoneySavedTillNow] = useState(\"\");\n    const [moneySavedPerYear, setMoneySavedPerYear] = useState(\"\");\n\n    const timeElapsedSoberDate = useCallback(() => {\n        setInterval(() => {\n            let timeDiff = Date.now() - Date.parse(soberDate);\n            timeDiff = timeDiff / 1000;\n\n            let seconds = Math.floor(timeDiff % 60);\n            let secondsAsString = seconds < 10 ? \"0\" + seconds : seconds;\n\n            timeDiff = Math.floor(timeDiff / 60);\n            let minutes = timeDiff % 60;\n            let minutesAsString = minutes < 10 ? \"0\" + minutes : minutes;\n\n            timeDiff = Math.floor(timeDiff / 60);\n            let hours = timeDiff % 24;\n            let totalHoursAsString = hours < 10 ? \"0\" + hours : hours;\n\n            timeDiff = Math.floor(timeDiff / 24);\n            let days = timeDiff;\n\n            setElapsedSoberDate(\n                days + \"d \" +\n                totalHoursAsString + \"h \" +\n                minutesAsString + \"m \" +\n                secondsAsString + \"s\");\n        }, 200);\n    }, [soberDate]);\n\n    const moneySaved = useCallback(() => {\n        let timeDiff = Date.now() - Date.parse(soberDate);\n        let millisecondsInADay = 1000 * 60 * 60 * 24;\n        let smokingCostPerDay = smokingCostPerWeek / 7;\n\n        let moneySaved = timeDiff / millisecondsInADay * smokingCostPerDay;\n        setMoneySavedTillNow(moneySaved.toFixed(2));\n\n\n        let moneySavedPerYear = smokingCostPerWeek * 52;\n        setMoneySavedPerYear(moneySavedPerYear.toFixed(2));\n    }, [smokingCostPerWeek, soberDate]);\n\n\n    useEffect(() => {\n        if (Object.keys(profile).length > 0) {\n            timeElapsedSoberDate();\n            moneySaved();\n        }\n        return () => {\n            setElapsedSoberDate('')\n            setMoneySavedTillNow('')\n            setMoneySavedPerYear('');\n        }\n    }, [timeElapsedSoberDate, moneySaved, profile]);\n\n    return (\n        <>\n            {apiCtx.isLoading && <Progress />}\n\n            {!apiCtx.isLoading &&\n                <div>\n                    <div className={styles.elapsedSoberTimeContainer}>\n                        <span className={styles.smokeFreeHeading}>Time Smoke free</span>\n                        <div className={styles.elapsedSoberTime}>{elapsedSoberDate}</div>\n                    </div>\n\n                    <div className={styles.moneySavedContainer}>\n                        <span className={styles.moneySavedLabel}>Money saved</span>\n                        <div className={styles.moneySaved}>${moneySavedTillNow}</div>\n                        <br />\n                        <span className={styles.moneySavedLabel}>Per year</span>\n                        <div className={styles.moneySaved}>${moneySavedPerYear}</div>\n                    </div><hr />\n\n                    <div className={styles.quittingReasonContainer}>\n                        <span className={styles.quittingReasonLabel}>I'm quitting for</span>\n                        <div className={styles.quittingReason}>\"{quittingReason}\"</div>\n                        <span className={styles.quittingReasonQuote}>Once you learn to quit, it becomes a habit</span>\n                    </div><hr />\n                </div>\n            }\n        </>\n    )\n}\n\nexport default Dashboard;","import React, { useState, useEffect, useReducer, useContext } from 'react';\n\nimport { withRouter } from 'react-router';\n\nimport AuthContext from '../../../contexts/user-context';\nimport Card from '../../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../../UI/Button/Button';\nimport Input from '../../UI/Input/Input'\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'EMAIL_CHANGE') {\n    return { value: action.val, isValid: action.val.includes('@') };\n  }\n  if (action.type === 'EMAIL_BLUR') {\n    return { value: state.value, isValid: state.value.includes('@') };\n  }\n  return { value: '', isValid: false };\n}\n\nconst passReducer = (state, action) => {\n  if (action.type === 'PASS_CHANGE') {\n    return { value: action.val, isValid: true };\n  }\n  if (action.type === 'PASS_BLUR') {\n    return { value: state.value, isValid: true };\n  }\n  return { value: '', isValid: false };\n}\n\nconst Login = (props) => {\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailEntered, emailDispatch] = useReducer(emailReducer,\n    { value: '', isValid: null });\n\n  const [passEntered, passDispatch] = useReducer(passReducer,\n    { value: '', isValid: null });\n\n  const { isValid: emailIsValid } = emailEntered;\n  const { isValid: passIsValid } = passEntered;\n  const [isLoading, setIsLoading] = useState(false);\n  const [shakeonError, setShakeonError] = useState('');\n  const [isError, setIsError] = useState(false);\n  const [message, setMessage] = useState('');\n\n  const authCtx = useContext(AuthContext);\n\n  useEffect(() => {\n    const formValidityTimout = setTimeout(() => {\n      setFormIsValid(\n        emailIsValid && passIsValid\n      );\n    }, 500);\n\n    return () => {\n      clearTimeout(formValidityTimout);\n      setFormIsValid(false);\n    }\n  }, [emailIsValid, passIsValid])\n\n  const emailChangeHandler = (event) => {\n    emailDispatch({ type: 'EMAIL_CHANGE', val: event.target.value });\n  };\n\n  const passwordChangeHandler = (event) => {\n    passDispatch({ type: 'PASS_CHANGE', val: event.target.value });\n  };\n\n  const validateEmailHandler = () => {\n    emailDispatch({ type: 'EMAIL_BLUR' });\n  };\n\n  const validatePasswordHandler = () => {\n    passDispatch({ type: 'PASS_BLUR' })\n  };\n\n  const handleLoginError = (message) => {\n    setIsError(true);\n    setMessage(message);\n    setShakeonError(classes.shake);\n    setTimeout(() => {\n      setShakeonError('');\n    }, 250);\n  }\n\n  const submitHandler = async (event) => {\n    event.preventDefault();\n    setIsLoading(true);\n    const response = await authCtx.onLogin(emailEntered.value, passEntered.value);\n    setIsLoading(false);\n\n    if (!response.ok) {\n      handleLoginError(response.message);\n      return;\n    }\n\n    setMessage(response.message);\n\n    return props.history.push(\"/home\");\n  };\n\n  const switchToRegister = () => {\n    return props.history.push(\"/register\");\n  }\n\n  let msgClass = classes.successMsg;\n  if (isError) {\n    msgClass = classes.failureMsg;\n  }\n\n  return (\n    <>\n      <div className={classes.loginHeadingDiv}>\n        <h1 className={classes.loginHeading}>\n          Login\n        </h1>\n      </div>\n      <Card className={`${classes.login} ${shakeonError}`}>\n        <form onSubmit={submitHandler}>\n          <Input\n            id=\"email\"\n            label=\"E-mail\"\n            type=\"email\"\n            isValid={emailIsValid}\n            value={emailEntered.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n          <Input\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            isValid={passIsValid}\n            value={passEntered.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n          <div className={classes.actions}>\n            <Button\n              type=\"submit\"\n              className={classes.btn}\n              disabled={!formIsValid}\n              isLoading={isLoading}>\n              Login\n            </Button>\n          </div>\n          <div className={classes.redirectToRegisterDiv}>\n            <p>If you are a new user,&nbsp;\n              <span className={classes.switchToReg} onClick={switchToRegister}>\n                <u>Register here</u>\n              </span>\n            </p>\n          </div>\n        </form>\n      </Card>\n      <div className={`${msgClass} ${classes.messageDiv}`}>\n        <p className={classes.message}>{message}</p>\n      </div>\n    </>\n  );\n};\n\nexport default withRouter(Login);\n","import React, { useState, useEffect, useReducer, useContext } from 'react';\nimport { withRouter } from 'react-router';\n\nimport AuthContext from '../../../contexts/user-context';\nimport Card from '../../UI/Card/Card';\nimport classes from './Register.module.css';\nimport Button from '../../UI/Button/Button';\nimport Input from '../../UI/Input/Input'\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'EMAIL_CHANGE') {\n    return { value: action.val, isValid: action.val.includes('@') };\n  }\n  if (action.type === 'EMAIL_BLUR') {\n    return { value: state.value, isValid: state.value.includes('@') };\n  }\n  return { value: '', isValid: false };\n}\n\nconst passReducer = (state, action) => {\n  if (action.type === 'PASS_CHANGE') {\n    return { value: action.val, isValid: true };\n  }\n  if (action.type === 'PASS_BLUR') {\n    return { value: state.value, isValid: true };\n  }\n  return { value: '', isValid: false };\n}\n\nconst Register = (props) => {\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailEntered, emailDispatch] = useReducer(emailReducer,\n    { value: '', isValid: null });\n\n  const [passEntered, passDispatch] = useReducer(passReducer,\n    { value: '', isValid: null });\n\n  const { isValid: emailIsValid } = emailEntered;\n  const { isValid: passIsValid } = passEntered;\n\n  const [nameEntered, setNameEntered] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [shakeonError, setShakeonError] = useState('');\n  const [isError, setIsError] = useState(false);\n  const [message, setMessage] = useState('');\n\n  const authCtx = useContext(AuthContext);\n\n  useEffect(() => {\n    const formValidityTimout = setTimeout(() => {\n      setFormIsValid(\n        emailIsValid && passIsValid\n      );\n    }, 500);\n\n    return () => {\n      clearTimeout(formValidityTimout);\n    }\n  }, [emailIsValid, passIsValid])\n\n  const emailChangeHandler = (event) => {\n    emailDispatch({ type: 'EMAIL_CHANGE', val: event.target.value });\n  };\n\n  const passwordChangeHandler = (event) => {\n    passDispatch({ type: 'PASS_CHANGE', val: event.target.value });\n  };\n\n  const nameChangeHandler = (event) => {\n    setNameEntered(event.target.value);\n  };\n\n  const validateEmailHandler = () => {\n    emailDispatch({ type: 'EMAIL_BLUR' });\n  };\n\n  const validatePasswordHandler = () => {\n    passDispatch({ type: 'PASS_BLUR' })\n  };\n\n  const handleRegistrationError = (message) => {\n    setIsError(true);\n    setMessage(message);\n    setShakeonError(classes.shake);\n    setTimeout(() => {\n      setShakeonError('');\n    }, 250);\n  }\n\n  const submitHandler = async (event) => {\n    event.preventDefault();\n\n    setIsLoading(true);\n    const response = await authCtx.onRegister(nameEntered, emailEntered.value, passEntered.value);\n    setIsLoading(false);\n\n    if (!response.ok) {\n      handleRegistrationError(response.message);\n      return;\n    }\n\n    setMessage(response.message);\n  };\n\n  const switchToLogin = () => {\n    return props.history.push(\"/login\");\n  }\n\n  let msgClass = classes.successMsg;\n  if (isError) {\n    msgClass = classes.failureMsg;\n  }\n\n  return (\n    <>\n      <div className={classes.regHeadingDiv}>\n        <h1 className={classes.regHeading}>\n          Register\n        </h1>\n      </div>\n      <Card className={`${classes.register} ${shakeonError}`}>\n        <form onSubmit={submitHandler}>\n          <Input\n            id=\"name\"\n            label=\"Name\"\n            type=\"text\"\n            onChange={nameChangeHandler}\n            value={nameEntered}\n          />\n          <Input\n            id=\"email\"\n            label=\"E-mail\"\n            type=\"email\"\n            isValid={emailIsValid}\n            value={emailEntered.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n          <Input\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            isValid={passIsValid}\n            value={passEntered.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n          <div className={classes.actions}>\n            <Button\n              type=\"submit\"\n              className={classes.btn}\n              disabled={!formIsValid}\n              isLoading={isLoading}>\n              Register\n            </Button>\n          </div>\n          <div className={classes.redirectToLoginDiv}>\n            <p>If you're already a user, &nbsp;\n              <span className={classes.switchToLogin} onClick={switchToLogin}>\n                <u>Login here</u>\n              </span>\n            </p>\n          </div>\n        </form>\n      </Card>\n      <div className={`${msgClass} ${classes.messageDiv}`}>\n        <p className={classes.message}>{message}</p>\n      </div>\n    </>\n  );\n};\n\nexport default withRouter(Register);\n","import React from 'react'\n\nimport './DrawerToggleButton.css'\n\nconst drawerToggleButton = props => (\n  <button className=\"toggle-button\" onClick={props.click}>\n    <div className=\"toggle-button__line\" />\n    <div className=\"toggle-button__line\" />\n    <div className=\"toggle-button__line\" />\n  </button>\n)\n\nexport default drawerToggleButton","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport AuthContext from '../../contexts/user-context';\nimport ApiContext from '../../contexts/api-context';\nimport DrawerToggleButton from '../SideDrawer/DrawerToggleButton';\nimport './Toolbar.css';\n\nconst Navigation = (props) => {\n\n  const ctx = useContext(AuthContext);\n  const apiCtx = useContext(ApiContext);\n  const profile = apiCtx.profile;\n  \n  let updatedProfile = false;\n  \n  if(profile && profile.hasOwnProperty('userId')) {\n    updatedProfile = true;\n  }\n\n  return (\n    <header className=\"toolbar\">\n      <nav className=\"toolbar__navigation\">\n        <div className=\"toolbar__toggle-button\">\n          <DrawerToggleButton click={props.drawerClickHandler} />\n        </div>\n        <div className=\"toolbar__logo\">\n          <Link to=\"/\">QUITWEED.ORG</Link>\n        </div>\n        <div className=\"spacer\" />\n        <div className=\"toolbar_navigation-items\">\n          <ul>\n            {ctx.isLoggedIn && !apiCtx.isLoading && !updatedProfile && (\n              <li>\n                <Link to=\"/home\">Home</Link>\n              </li>\n            )}\n            {ctx.isLoggedIn && updatedProfile && (\n              <li>\n                <Link to=\"/dashboard\">Dashboard</Link>\n              </li>\n            )}\n            {ctx.isLoggedIn && updatedProfile && (\n              <li>\n                <Link to=\"/dailyLog\">DailyLog</Link>\n              </li>\n            )}\n            {ctx.isLoggedIn && updatedProfile && (\n              <li>\n                <Link to=\"/progress\">Progress</Link>\n              </li>\n            )}\n            {ctx.isLoggedIn && updatedProfile && (\n              <li>\n                <Link to=\"/profileForm\">Profile</Link>\n              </li>\n            )}\n            {!ctx.isLoggedIn && (\n              <li>\n                <Link to=\"/login\">Login\n                  {/* <i class=\"arrow down\"></i> */}\n                </Link>\n                {/* <div className=\"sub-menu\">\n                  <ul>\n                    <li>Login2</li>\n                    <li>Login3</li>\n                  </ul>\n                </div> */}\n              </li>\n            )}\n            {!ctx.isLoggedIn && (\n              <li>\n                <Link to=\"/register\">Register</Link>\n              </li>\n            )}\n            {ctx.isLoggedIn && (\n              <li>\n                <button className=\"logout-button\" onClick={ctx.onLogout}>Logout</button>\n              </li>\n            )}\n          </ul>\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nexport default Navigation;\n","import React, {useContext} from 'react'\nimport { Link } from 'react-router-dom';\n\nimport AuthContext from '../../contexts/user-context';\nimport ApiContext from '../../contexts/api-context';\n\nimport './SideDrawer.css'\n\nconst SideDrawer = props => {\n\n  const ctx = useContext(AuthContext);\n  const apiCtx = useContext(ApiContext);\n  const profile = apiCtx.profile;\n  \n  let updatedProfile = false;\n  \n  if(profile && profile.hasOwnProperty('userId')) {\n    updatedProfile = true;\n  }\n\n  let drawerClasses = 'side-drawer'\n  if(props.show) {\n    drawerClasses = 'side-drawer open';\n  }\n\n  return (\n    <nav className={drawerClasses}>\n      <ul>\n            {ctx.isLoggedIn && !apiCtx.isLoading && !updatedProfile && (\n              <li>\n                <Link to=\"/home\">Home</Link>\n              </li>\n            )}\n            {ctx.isLoggedIn && updatedProfile && (\n              <li>\n                <Link to=\"/dashboard\">Dashboard</Link>\n              </li>\n            )}\n            {ctx.isLoggedIn && updatedProfile && (\n              <li>\n                <Link to=\"/dailyLog\">DailyLog</Link>\n              </li>\n            )}\n            {ctx.isLoggedIn && updatedProfile && (\n              <li>\n                <Link to=\"/progress\">Progress</Link>\n              </li>\n            )}\n            {ctx.isLoggedIn && updatedProfile && (\n              <li>\n                <Link to=\"/profileForm\">Profile</Link>\n              </li>\n            )}\n            {!ctx.isLoggedIn && (\n              <li>\n                <Link to=\"/login\">Login\n                  {/* <i class=\"arrow down\"></i> */}\n                </Link>\n                {/* <div className=\"sub-menu\">\n                  <ul>\n                    <li>Login2</li>\n                    <li>Login3</li>\n                  </ul>\n                </div> */}\n              </li>\n            )}\n            {!ctx.isLoggedIn && (\n              <li>\n                <Link to=\"/register\">Register</Link>\n              </li>\n            )}\n            {ctx.isLoggedIn && (\n              <li>\n                <button className=\"logout-button-sidebar\" onClick={ctx.onLogout}>Logout</button>\n              </li>\n            )}\n          </ul>\n    </nav>\n  )\n}\n\nexport default SideDrawer;","import React from 'react'\n\nimport './Backdrop.css'\n\nconst Backdrop = props => (\n    <div className=\"backdrop\" onClick={props.click}></div>\n)\n\nexport default Backdrop;","import React, { useState } from 'react';\nimport Toolbar from './Toolbar';\nimport SideDrawer from '../SideDrawer/SideDrawer';\nimport Backdrop from '../Backdrop/Backdrop';\n\nimport './MainHeader.css';\n\nconst MainHeader = (props) => {\n\n  const [sideDrawerOpen, setDrawerOpen] = useState(false);\n\n  const drawerToggleClickHandler = () => {\n    setDrawerOpen(prevState => {\n      return !prevState.sideDrawerOpen;\n    })\n  }\n\n  const backdropClickHandler = () => {\n    setDrawerOpen(false);\n  }\n\n  let backdrop;\n\n  if (sideDrawerOpen) {\n    backdrop = <Backdrop click={backdropClickHandler} />\n  }\n\n  return (\n    <>\n      <Toolbar drawerClickHandler={drawerToggleClickHandler} />\n      <SideDrawer show={sideDrawerOpen} />\n      {backdrop}\n    </>\n  );\n};\n\nexport default MainHeader;\n","import React, {useContext} from 'react';\nimport AuthContext from '../contexts/user-context';\nimport { Redirect } from 'react-router';\n\nimport { Route } from 'react-router-dom';\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n\n    const authCtx = useContext(AuthContext);\n\n    return (\n        <Route {...rest} render={(props) => {\n            if(!authCtx.isLoading) {\n                if(authCtx.isLoggedIn) {\n                    return <Component />\n                } else {\n                    return <Redirect to=\"/login\" />\n                }\n            }\n        }} />\n    )\n}\n\nexport default PrivateRoute;","import React, {useContext} from 'react';\nimport AuthContext from '../contexts/user-context';\nimport { Redirect } from 'react-router';\n\nimport { Route } from 'react-router-dom';\n\nconst PublicRoute = ({component: Component, restricted, ...rest}) => {\n\n    const authCtx = useContext(AuthContext);\n\n    return (\n        <Route {...rest} render={(props) => {\n            if(!authCtx.isLoading) {\n                if(authCtx.isLoggedIn && restricted) {\n                    return <Redirect to=\"/\" />\n                } else {\n                    return <Component />\n                }\n            }\n        }} />\n    )\n}\n\nexport default PublicRoute;","import React from 'react';\n\nimport styles from './LandingPage.module.css';\n\nconst LandingPage = () => {\n    return (\n        <div className={styles.landingPage_container}>\n            <div className={styles.image_div}></div>\n            <div className={styles.welcome_info_div}>\n                <h1 className={styles.welcome_heading}>\n                    👋 Welcome to QuitWeed.org\n                </h1>\n                <p className={styles.welcome_message}>\n                    Our goal is to bring attention to the negative impacts\n                    of marijuana on health, mental clarity, appetite, motivation, and more.\n                    We are not here to make a moral statement on marijuana usage;\n                    plenty of people are able to responsibly enjoy the drug.\n                    For those of us who have become addicted, however,\n                    the drug quickly takes control of numerous aspects of life.\n                    <br /><br />\n                    QuitWeed.org is a tool that tracks your journey into sobriety,\n                    while monitoring health and emotional improvements along the way.\n                    <br /><br />\n                    To track these improvements, fill out the survey on the right and\n                    check-in to the website daily. In as little as three days\n                    you will see withdrawal symptoms recede,\n                    and soon you will have your old life back.</p>\n            </div>\n        </div>\n    )\n}\n\nexport default LandingPage;","import React from \"react\";\nimport { withRouter } from 'react-router';\n\nimport Card from \"../../UI/Card/Card\";\nimport Button from \"../../UI/Button/Button\";\nimport styles from './NewDailyLog.module.css';\n\nconst NewDailyLog = (props) => {\n\n    const newDailyLogHandler = () => {\n        return props.history.push(\"/dailyLogForm\");\n    }\n\n    const dateFormatter = (date) => {\n        date.setMinutes(date.getMinutes() - date.getTimezoneOffset());\n        return (<>\n            <h3>{date.toISOString().slice(0, 10)}</h3>\n            <h4>{date.toISOString().slice(11, 16)}</h4>\n        </>)\n    }\n\n    const DailyLogHistory = () => {\n        if (props.dailyLog && props.dailyLog.length > 0) {\n            return (\n                <div>\n                    {props.dailyLog.map((log, index) => {\n                        return <CalendarDailyLog log={log} key={index} />\n                    })}\n                </div>\n            )\n        }\n    }\n\n    const CalendarDailyLog = ({ log }) => {\n        return (\n            <div className={styles.calendarDiv}>\n                <div style={{ flex: 1 }}></div>\n                <div className={styles.calendar}></div>\n                <div className={styles.logHistoryDate}>\n                    {dateFormatter(new Date(log.createdTime))}\n                </div>\n                <div className={styles.logHistoryStats}>\n                    <p>Cravings: {log.cravings}/10</p>\n                    <p>Motivation: {log.motivation}/10</p>\n                </div>\n                <div style={{ flex: 1 }}></div>\n            </div>\n        )\n    }\n\n    return (\n        <>\n            {props.dailyLog && props.dailyLog.length === 0 &&\n                (<div>\n                    <div className={styles.newDailyLogFormHeadingDiv}>\n                        <h1 className={styles.newDailyLogFormHeading}>\n                            Daily Log\n                        </h1>\n                    </div>\n                    <Card className={styles.newDailyLogContainer}>\n                        <div className={styles.dailyLogImage}></div>\n                        <div className={styles.dailyLogButtonDiv}>\n                            <Button\n                                onClick={newDailyLogHandler}\n                                className={styles.dailyLogButton}>\n                                Add new log\n                            </Button>\n                        </div>\n                    </Card>\n                </div>)\n            }\n            {props.dailyLog && props.dailyLog.length > 0 &&\n                <div className={styles.addNewLogDiv}>\n                    <Button\n                        onClick={newDailyLogHandler}\n                        className={styles.addNewLogButton}>\n                        Add New Log\n                    </Button>\n                </div>\n            }\n            {props.dailyLog && props.dailyLog.length > 0 &&\n                <DailyLogHistory />\n            }\n        </>\n    )\n}\n\nexport default withRouter(NewDailyLog);","import React, { useContext } from 'react';\nimport ApiContext from '../../contexts/api-context';\nimport NewDailyLog from './NewDailyLog/NewDailyLog';\n\nimport Progress from '../UI/Progress/Progress';\n\nconst DailyLog = () => {\n\n    const apiCtx = useContext(ApiContext);\n    const dailyLog = apiCtx.dailyLog.dailyLog;\n\n    return (\n        <>\n            {apiCtx.isLoading && <Progress />}\n            {!apiCtx.isLoading &&\n                <NewDailyLog dailyLog={dailyLog} />\n            }\n        </>\n    );\n}\n\nexport default DailyLog;","import React, { useState, useContext } from \"react\";\nimport ApiContext from \"../../../contexts/api-context\";\nimport { withRouter } from 'react-router';\n\nimport Card from \"../../UI/Card/Card\";\nimport Input from \"../../UI/Input/Input\";\nimport Button from \"../../UI/Button/Button\";\nimport styles from './DailyLogForm.module.css';\n\nconst DailyLogForm = (props) => {\n\n    const apiCtx = useContext(ApiContext);\n\n    const [isLoading, setIsLoading] = useState(false);\n\n    const [cravings, setCravings] = useState(0);\n    const [irritability, setIrritability] = useState(0);\n    const [anxiety, setAnxiety] = useState(0);\n    const [insomnia, setInsomnia] = useState(0);\n    const [appetiteLoss, setAppetiteLoss] = useState(0);\n    const [moodSwings, setMoodSwings] = useState(0);\n    const [depression, setDepression] = useState(0);\n    const [coldSweats, setColdSweats] = useState(0);\n    const [motivation, setMotivation] = useState(0);\n    const [happiness, setHappiness] = useState(0);\n    const [confidence, setConfidence] = useState(0);\n\n    const cravingsChangeHandler = (e) => {\n        setCravings(e.target.value);\n    }\n    const irritabilityChangeHandler = (e) => {\n        setIrritability(e.target.value);\n    }\n    const anxietyChangeHandler = (e) => {\n        setAnxiety(e.target.value);\n    }\n    const insomniaChangeHandler = (e) => {\n        setInsomnia(e.target.value);\n    }\n    const appetiteLossChangeHandler = (e) => {\n        setAppetiteLoss(e.target.value);\n    }\n    const moodSwingsChangeHandler = (e) => {\n        setMoodSwings(e.target.value);\n    }\n    const depressionChangeHandler = (e) => {\n        setDepression(e.target.value);\n    }\n    const coldSweatsChangeHandler = (e) => {\n        setColdSweats(e.target.value);\n    }\n    const motivationChangeHandler = (e) => {\n        setMotivation(e.target.value);\n    }\n    const happinessChangeHandler = (e) => {\n        setHappiness(e.target.value);\n    }\n    const confidenceChangeHandler = (e) => {\n        setConfidence(e.target.value);\n    }\n\n    const redirectToDailyLog = () => {\n        return props.history.push(\"/dailyLog\");\n    }\n\n    const submitHandler = async (event) => {\n        event.preventDefault();\n        let body = {\n            cravings: cravings,\n            irritability: irritability,\n            anxiety: anxiety,\n            insomnia: insomnia,\n            appetiteLoss: appetiteLoss,\n            moodSwings: moodSwings,\n            depression: depression,\n            coldSweats: coldSweats,\n            motivation: motivation,\n            happiness: happiness,\n            confidence: confidence\n        }\n        setIsLoading(true);\n        const response = await apiCtx.updateDailyLog(body);\n        setIsLoading(false);\n\n        if (!response.ok) {\n            return;\n        }\n\n        redirectToDailyLog(); \n\n    }\n\n    return (\n        <>\n            <div className={styles.dailyLogFormHeadingDiv}>\n                <h1 className={styles.dailyLogFormHeading}>\n                    Daily Log\n                </h1>\n                <p className={styles.dailyLogFormSubHeading}>\n                    Add daily logs to keep track\n                    of your cravings over time.\n                </p>\n            </div>\n\n            <Card className={styles.dailyLogForm}>\n                <span className={styles.formlegend}>\n                    * on a scale of 0 - 10, with 10 being the maximum</span>\n                <br />\n                <form onSubmit={submitHandler}>\n                    <Input\n                        id=\"cravings\"\n                        label=\"Cravings\"\n                        type=\"range\"\n                        min=\"0\"\n                        max=\"10\"\n                        value={cravings}\n                        displayMinMax={true}\n                        onChange={cravingsChangeHandler}\n                    />\n                    <Input\n                        id=\"irritability\"\n                        label=\"Irritability\"\n                        type=\"range\"\n                        min=\"0\"\n                        max=\"10\"\n                        value={irritability}\n                        displayMinMax={true}\n                        onChange={irritabilityChangeHandler}\n                    />\n                    <Input\n                        id=\"anxiety\"\n                        label=\"Anxiety\"\n                        type=\"range\"\n                        min=\"0\"\n                        max=\"10\"\n                        value={anxiety}\n                        displayMinMax={true}\n                        onChange={anxietyChangeHandler}\n                    />\n                    <Input\n                        id=\"insomnia\"\n                        label=\"Insomnia\"\n                        type=\"range\"\n                        min=\"0\"\n                        max=\"10\"\n                        value={insomnia}\n                        displayMinMax={true}\n                        onChange={insomniaChangeHandler}\n                    />\n                    <Input\n                        id=\"appetiteLoss\"\n                        label=\"Appetite Loss\"\n                        type=\"range\"\n                        min=\"0\"\n                        max=\"10\"\n                        value={appetiteLoss}\n                        displayMinMax={true}\n                        onChange={appetiteLossChangeHandler}\n                    />\n                    <Input\n                        id=\"moodSwings\"\n                        label=\"Mood Swings\"\n                        type=\"range\"\n                        min=\"0\"\n                        max=\"10\"\n                        value={moodSwings}\n                        displayMinMax={true}\n                        onChange={moodSwingsChangeHandler}\n                    />\n                    <Input\n                        id=\"depression\"\n                        label=\"Depression\"\n                        type=\"range\"\n                        min=\"0\"\n                        max=\"10\"\n                        value={depression}\n                        displayMinMax={true}\n                        onChange={depressionChangeHandler}\n                    />\n                    <Input\n                        id=\"coldSweats\"\n                        label=\"Cold Sweats\"\n                        type=\"range\"\n                        min=\"0\"\n                        max=\"10\"\n                        value={coldSweats}\n                        displayMinMax={true}\n                        onChange={coldSweatsChangeHandler}\n                    />\n                    <br /><hr /><br />\n                    <Input\n                        id=\"confidence\"\n                        label=\"Confidence\"\n                        type=\"range\"\n                        min=\"0\"\n                        max=\"10\"\n                        value={confidence}\n                        displayMinMax={true}\n                        onChange={confidenceChangeHandler}\n                    />\n                    <Input\n                        id=\"happiness\"\n                        label=\"Happiness\"\n                        type=\"range\"\n                        min=\"0\"\n                        max=\"10\"\n                        value={happiness}\n                        displayMinMax={true}\n                        onChange={happinessChangeHandler}\n                    />\n                    <Input\n                        id=\"motivation\"\n                        label=\"Motivation\"\n                        type=\"range\"\n                        min=\"0\"\n                        max=\"10\"\n                        value={motivation}\n                        displayMinMax={true}\n                        onChange={motivationChangeHandler}\n                    />\n                    <br />\n                    <div className={styles.actions}>\n                        <Button\n                            type=\"submit\"\n                            className={styles.loading}\n                            isLoading={isLoading}>\n                            Submit\n                        </Button>\n                    </div>\n                </form>\n            </Card>\n        </>\n    )\n}\n\nexport default withRouter(DailyLogForm);","import React, { useEffect, useReducer, useContext, useCallback } from \"react\";\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport NoDataToDisplay from 'highcharts/modules/no-data-to-display';\n\nimport styles from './DailyLogChart.module.css'\nimport ApiContext from \"../../contexts/api-context\";\nimport Progress from \"../UI/Progress/Progress\";\n\nconst DailyLogChart = () => {\n\n    const apiCtx = useContext(ApiContext);\n    const dailyLog = apiCtx.dailyLog.dailyLog;\n\n    const dailyLogReducer = (state, action) => {\n\n        let cravingsData = dailyLog.reduce((acc, val) => {\n            acc.data.push([new Date(val.createdTime).getTime(), val.cravings]);\n            return acc;\n        }, { name: 'Cravings', data: [] })\n\n        let irritabilityData = dailyLog.reduce((acc, val) => {\n            acc.data.push([new Date(val.createdTime).getTime(), val.irritability]);\n            return acc;\n        }, { name: 'Irritability', data: [] })\n\n        let anxietyData = dailyLog.reduce((acc, val) => {\n            acc.data.push([new Date(val.createdTime).getTime(), val.anxiety]);\n            return acc;\n        }, { name: 'Anxiety', data: [] })\n\n        let insomniaData = dailyLog.reduce((acc, val) => {\n            acc.data.push([new Date(val.createdTime).getTime(), val.insomnia]);\n            return acc;\n        }, { name: 'Insomnia', data: [] })\n\n        let appetiteLossData = dailyLog.reduce((acc, val) => {\n            acc.data.push([new Date(val.createdTime).getTime(), val.appetiteLoss]);\n            return acc;\n        }, { name: 'Appetite Loss', data: [] })\n\n        let moodSwingsData = dailyLog.reduce((acc, val) => {\n            acc.data.push([new Date(val.createdTime).getTime(), val.moodSwings]);\n            return acc;\n        }, { name: 'Mood swings', data: [] })\n\n        let depressionData = dailyLog.reduce((acc, val) => {\n            acc.data.push([new Date(val.createdTime).getTime(), val.depression]);\n            return acc;\n        }, { name: 'Depression', data: [] })\n\n        let coldSweatsData = dailyLog.reduce((acc, val) => {\n            acc.data.push([new Date(val.createdTime).getTime(), val.coldSweats]);\n            return acc;\n        }, { name: 'Cold Sweats', data: [] })\n\n        return [cravingsData, irritabilityData, anxietyData, insomniaData, appetiteLossData, moodSwingsData, depressionData, coldSweatsData];\n    }\n\n    const dailyLogAdditionalReducer = (state, action) => {\n\n        let motivationData = dailyLog.reduce((acc, val) => {\n            acc.data.push([new Date(val.createdTime).getTime(), val.motivation]);\n            return acc;\n        }, { name: 'Motivation', data: [] })\n\n        let happinessData = dailyLog.reduce((acc, val) => {\n            acc.data.push([new Date(val.createdTime).getTime(), val.happiness]);\n            return acc;\n        }, { name: 'Happiness', data: [] })\n\n        let confidenceData = dailyLog.reduce((acc, val) => {\n            acc.data.push([new Date(val.createdTime).getTime(), val.confidence]);\n            return acc;\n        }, { name: 'Confidence', data: [] })\n\n        return [motivationData, happinessData, confidenceData];\n\n    }\n\n    const [dailyLogData, dispatchDailyLogData] = useReducer(dailyLogReducer, []);\n    const [dailyLogAdditionalData, dispatchDailyLogAdditionalData] = useReducer(dailyLogAdditionalReducer, []);\n\n    const options = {\n        chart: {\n            type: 'spline'\n        },\n        title: {\n            text: `Daily Cravings - Stop them! ✋ `\n        },\n        subtitle: {\n            text: 'Add daily input to track your progress over time'\n        },\n        xAxis: {\n            type: 'datetime',\n            labels: {\n                formatter: function () {\n                    return Highcharts.dateFormat('%e %b \\'%y', this.value);\n                }\n            },\n            title: {\n                text: 'Date'\n            }\n        },\n        yAxis: {\n            title: {\n                text: 'Daily Cravings'\n            },\n            min: 0\n        },\n        tooltip: {\n            formatter: function() {\n                return tooltipFormatter(this);\n            }\n        },\n\n        plotOptions: {\n            series: {\n                marker: {\n                    enabled: true\n                }\n            }\n        },\n\n        colors: [\"#7cb5ec\", \"#434348\", \"#90ed7d\", \"#f7a35c\", \"#8085e9\", \"#f15c80\", \"#e4d354\", \"#2b908f\", \"#f45b5b\", \"#91e8e1\"],\n\n        // Define the data points. All series have a dummy year\n        // of 1970/71 in order to be compared on the same x axis. Note\n        // that in JavaScript, months start at 0 for January, 1 for February etc.\n        series: dailyLogData,\n\n        responsive: {\n            rules: [{\n                condition: {\n                    maxWidth: 500\n                },\n                chartOptions: {\n                    plotOptions: {\n                        series: {\n                            marker: {\n                                radius: 2.5\n                            }\n                        }\n                    }\n                }\n            }]\n        },\n\n        caption: {\n            text: `<b>What this graph indicates?</b><br />\n            It tracks your daily progress of quitting\n            smoking over time on attributes such as\n            like cravings, irritability, etc. <br />\n            The Y-axis indicates your \n            daily urge on a scale of 0 - 10, \n            with 10 being the maximum. The X-axis\n            denotes the timestamp.`\n        }\n    };\n\n    const options1 = {\n        chart: {\n            type: 'spline'\n        },\n        title: {\n            text: `Daily Motivation - Keep going! 💪 `\n        },\n        subtitle: {\n            text: 'Add daily input to track your progress over time'\n        },\n        xAxis: {\n            type: 'datetime',\n            labels: {\n                formatter: function () {\n                    return Highcharts.dateFormat('%e %b \\'%y', this.value);\n                }\n            },\n            title: {\n                text: 'Date'\n            }\n        },\n        yAxis: {\n            title: {\n                text: 'Daily Motivation'\n            },\n            min: 0\n        },\n        tooltip: {\n            formatter: function() {\n                return tooltipFormatter(this);\n            }\n        },\n\n        plotOptions: {\n            series: {\n                marker: {\n                    enabled: true\n                }\n            }\n        },\n\n        colors: [\"#f7a35c\", \"#8085e9\", \"#f15c80\", \"#e4d354\", \"#2b908f\", \"#f45b5b\", \"#91e8e1\"],\n\n        // Define the data points. All series have a dummy year\n        // of 1970/71 in order to be compared on the same x axis. Note\n        // that in JavaScript, months start at 0 for January, 1 for February etc.\n        series: dailyLogAdditionalData,\n\n        responsive: {\n            rules: [{\n                condition: {\n                    maxWidth: 500\n                },\n                chartOptions: {\n                    plotOptions: {\n                        series: {\n                            marker: {\n                                radius: 2.5\n                            }\n                        }\n                    }\n                }\n            }]\n        },\n\n        caption: {\n            text: `<b>What this graph indicates?</b><br />\n            It tracks your daily progress of quitting\n            smoking over time on attributes such as\n            like motivation, happiness, etc. <br />\n            The Y-axis indicates your \n            daily motivation on a scale of 0 - 10, \n            with 10 being the maximum. The X-axis\n            denotes the timestamp.`\n        }\n    };\n\n    const tooltipFormatter = (val) => {\n            let date = new Date(val.x);\n            date.setMinutes(date.getMinutes() - date.getTimezoneOffset());\n            date = date.toISOString();\n            date = date.substring(0, 10) + ' ' + date.substring(11, 19);\n\n            return `<b>${val.series.name} - ${val.y}</b><br />${date}`;\n    }\n\n    function changeHighChartsPosition() {\n        var el = document.getElementsByClassName(\"highcharts-container\")[0];\n        if (el) {\n            el.style.position = \"\";\n\n            Highcharts.charts.forEach(function (chart) {\n                if (chart)\n                    chart.reflow();\n            });\n        }\n    }\n\n    const customizeHighChart = useCallback(() => {\n        if (!apiCtx.isLoading && dailyLog && dailyLog.length === 0) {\n            NoDataToDisplay(Highcharts);\n            Highcharts.setOptions({\n                lang: {\n                    noData: 'Add DailyLog to see your progress here'\n                },\n                noData: {\n                    style: {\n                        fontWeight: 'bold',\n                        fontSize: '15px',\n                        color: 'red'\n                    }\n                },\n            });\n        }\n    }, [apiCtx.isLoading, dailyLog]);\n\n    customizeHighChart();\n    changeHighChartsPosition();\n\n    useEffect(() => {\n        customizeHighChart();\n        changeHighChartsPosition();\n        if (!apiCtx.isLoading && dailyLog && dailyLog.length > 0) {\n            dispatchDailyLogData();\n            dispatchDailyLogAdditionalData();\n        }\n    }, [dispatchDailyLogData, dispatchDailyLogAdditionalData, \n        dailyLog, apiCtx.isLoading, customizeHighChart\n    ])\n\n    return (\n        <>\n            {apiCtx.isLoading && <Progress />}\n            {!apiCtx.isLoading &&\n                <>\n                    <div className={styles.dailyLogChart_headingDiv}>\n                        <h1 className={styles.dailyLogChart_heading}>\n                            Your Daily Progress\n                        </h1>\n                        <p className={styles.dailyLogChart_subHeading}>\n                            Monitor your cravings and motivation regulary to develop good habits!\n                        </p>\n                    </div>\n                    <div className={styles.dailyLogChart_container}>\n                        {!apiCtx.isLoading && dailyLog &&\n                            <HighchartsReact\n                                containerProps={{\n                                    style: {\n                                        maxWidth: \"50rem\", margin: \"auto\"\n                                    }\n                                }}\n                                highcharts={Highcharts}\n                                options={options}\n                            />}\n                    </div>\n                    <div className={styles.dailyLogChart_container}>\n                        <HighchartsReact\n                            containerProps={{\n                                style: {\n                                    maxWidth: \"50rem\", margin: \"auto\"\n                                }\n                            }}\n                            highcharts={Highcharts}\n                            options={options1}\n                        />\n                    </div>\n                </>\n            }\n        </>\n    )\n}\n\nexport default DailyLogChart;","import React from 'react';\nimport Home from './components/Home/Home';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport Login from './components/SignUp/Login/Login';\nimport Register from './components/SignUp/Register/Register';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport PrivateRoute from './routes/PrivateRoute';\nimport PublicRoute from './routes/PublicRoute';\n\nimport './App.css';\nimport LandingPage from './components/LandingPage/LandingPage';\nimport DailyLog from './components/DailyLog/DailyLog';\nimport DailyLogForm from './components/DailyLog/NewDailyLog/DailyLogForm';\nimport DailyLogChart from './components/Charts/DailyLogChart';\nimport ProfileForm from './components/Profile/ProfileForm';\n\nfunction App() {\n\n  return (\n    <React.Fragment>\n      <HashRouter>\n        <MainHeader />\n\n        <main>\n          <Switch>\n            <PublicRoute path=\"/login\" restricted={true} component={Login} />\n            <PublicRoute path=\"/register\" restricted={true} component={Register} />\n            <PublicRoute path=\"/\" exact restricted={false} component={LandingPage} />\n            \n            <PrivateRoute path=\"/home\" exact component={Home} />\n            <PrivateRoute path=\"/dashboard\" exact component={Dashboard} />\n            <PrivateRoute path=\"/dailyLog\" exact component={DailyLog} />\n            <PrivateRoute path=\"/dailyLogForm\" exact component={DailyLogForm} />\n            <PrivateRoute path=\"/progress\" exact component={DailyLogChart} />\n            <PrivateRoute path=\"/profileForm\" exact component={ProfileForm} />\n            \n            <Route path=\"*\" component={() => \"404 not found\"} />\n          </Switch>\n        </main>\n\n      </HashRouter>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { AuthContextProvider } from './contexts/user-context';\nimport { ApiContextProvider } from './contexts/api-context';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <AuthContextProvider>\n    <ApiContextProvider>\n      <App />\n    </ApiContextProvider>\n  </AuthContextProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}